[{"/home/guilherme/Documentos/Frontend restore/src/index.tsx":"1","/home/guilherme/Documentos/Frontend restore/src/App.tsx":"2","/home/guilherme/Documentos/Frontend restore/src/styles/global.ts":"3","/home/guilherme/Documentos/Frontend restore/src/hooks/index.tsx":"4","/home/guilherme/Documentos/Frontend restore/src/routes/index.tsx":"5","/home/guilherme/Documentos/Frontend restore/src/hooks/AuthContext.tsx":"6","/home/guilherme/Documentos/Frontend restore/src/hooks/ToastContext.tsx":"7","/home/guilherme/Documentos/Frontend restore/src/routes/Route.tsx":"8","/home/guilherme/Documentos/Frontend restore/src/services/api.ts":"9","/home/guilherme/Documentos/Frontend restore/src/pages/SignIn/index.tsx":"10","/home/guilherme/Documentos/Frontend restore/src/pages/Report/index.tsx":"11","/home/guilherme/Documentos/Frontend restore/src/pages/Recover/index.tsx":"12","/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/index.tsx":"13","/home/guilherme/Documentos/Frontend restore/src/utils/getValidationErrors.ts":"14","/home/guilherme/Documentos/Frontend restore/src/components/ToastContainer/index.tsx":"15","/home/guilherme/Documentos/Frontend restore/src/pages/SignIn/styles.tsx":"16","/home/guilherme/Documentos/Frontend restore/src/pages/Report/styles.tsx":"17","/home/guilherme/Documentos/Frontend restore/src/pages/Recover/styles.tsx":"18","/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/styles.tsx":"19","/home/guilherme/Documentos/Frontend restore/src/components/GenericAlert/index.tsx":"20","/home/guilherme/Documentos/Frontend restore/src/components/Button/index.tsx":"21","/home/guilherme/Documentos/Frontend restore/src/components/Input/index.tsx":"22","/home/guilherme/Documentos/Frontend restore/src/components/InputReport/index.tsx":"23","/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/Users/index.tsx":"24","/home/guilherme/Documentos/Frontend restore/src/components/SideBar/index.tsx":"25","/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/Products/index.tsx":"26","/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/Registers/index.tsx":"27","/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/RegisterView/index.tsx":"28","/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/ProductView/index.tsx":"29","/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/Add Register/index.tsx":"30","/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/Categories/index.tsx":"31","/home/guilherme/Documentos/Frontend restore/src/components/ToastContainer/styles.tsx":"32","/home/guilherme/Documentos/Frontend restore/src/components/ToastContainer/Toast/index.tsx":"33","/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/Categories/styles.tsx":"34","/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/Add Register/styles.tsx":"35","/home/guilherme/Documentos/Frontend restore/src/utils/props.tsx":"36","/home/guilherme/Documentos/Frontend restore/src/components/EditCategory/index.tsx":"37","/home/guilherme/Documentos/Frontend restore/src/components/CreateCategory/index.tsx":"38","/home/guilherme/Documentos/Frontend restore/src/components/ToastContainer/Toast/styles.tsx":"39","/home/guilherme/Documentos/Frontend restore/src/components/CategoriesTable/index.tsx":"40","/home/guilherme/Documentos/Frontend restore/src/components/Alert/index.tsx":"41","/home/guilherme/Documentos/Frontend restore/src/components/Select/index.tsx":"42","/home/guilherme/Documentos/Frontend restore/src/components/AddOutputProduct/index.tsx":"43","/home/guilherme/Documentos/Frontend restore/src/components/AddInputProduct/index.tsx":"44","/home/guilherme/Documentos/Frontend restore/src/components/Title/index.tsx":"45","/home/guilherme/Documentos/Frontend restore/src/components/AddProductTable/index.tsx":"46","/home/guilherme/Documentos/Frontend restore/src/components/Title/styles.tsx":"47","/home/guilherme/Documentos/Frontend restore/src/components/AddInputProduct/styles.tsx":"48","/home/guilherme/Documentos/Frontend restore/src/components/AddOutputProduct/styles.tsx":"49","/home/guilherme/Documentos/Frontend restore/src/components/Select/styles.tsx":"50","/home/guilherme/Documentos/Frontend restore/src/components/Alert/styles.tsx":"51","/home/guilherme/Documentos/Frontend restore/src/components/Loading/index.tsx":"52","/home/guilherme/Documentos/Frontend restore/src/components/EditProduct/index.tsx":"53","/home/guilherme/Documentos/Frontend restore/src/components/Textarea/index.tsx":"54","/home/guilherme/Documentos/Frontend restore/src/components/InputFloat/index.tsx":"55","/home/guilherme/Documentos/Frontend restore/src/components/OutputTable/index.tsx":"56","/home/guilherme/Documentos/Frontend restore/src/components/LabelInput/index.tsx":"57","/home/guilherme/Documentos/Frontend restore/src/components/ButtonTooltip/index.tsx":"58","/home/guilherme/Documentos/Frontend restore/src/components/Tooltip/index.tsx":"59","/home/guilherme/Documentos/Frontend restore/src/components/ButtonTooltip/styles.tsx":"60","/home/guilherme/Documentos/Frontend restore/src/components/LabelInput/styles.tsx":"61","/home/guilherme/Documentos/Frontend restore/src/components/OutputTable/styles.tsx":"62","/home/guilherme/Documentos/Frontend restore/src/components/InputFloat/styles.tsx":"63","/home/guilherme/Documentos/Frontend restore/src/components/Textarea/styles.tsx":"64","/home/guilherme/Documentos/Frontend restore/src/components/EditProduct/styles.tsx":"65","/home/guilherme/Documentos/Frontend restore/src/components/Loading/styles.tsx":"66","/home/guilherme/Documentos/Frontend restore/src/components/CreateCategory/styles.tsx":"67","/home/guilherme/Documentos/Frontend restore/src/components/EditCategory/styles.tsx":"68","/home/guilherme/Documentos/Frontend restore/src/components/Tooltip/styles.tsx":"69","/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/ProductView/styles.tsx":"70","/home/guilherme/Documentos/Frontend restore/src/utils/getDateBr.tsx":"71","/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/RegisterView/styles.tsx":"72","/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/Registers/styles.tsx":"73","/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/Products/styles.tsx":"74","/home/guilherme/Documentos/Frontend restore/src/components/SideBar/styles.tsx":"75","/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/Users/styles.tsx":"76","/home/guilherme/Documentos/Frontend restore/src/components/Input/styles.tsx":"77","/home/guilherme/Documentos/Frontend restore/src/components/Button/styles.tsx":"78","/home/guilherme/Documentos/Frontend restore/src/components/RegisterProductsTable/index.tsx":"79","/home/guilherme/Documentos/Frontend restore/src/components/RegisterTable/index.tsx":"80","/home/guilherme/Documentos/Frontend restore/src/components/Reports/index.tsx":"81","/home/guilherme/Documentos/Frontend restore/src/components/ProductTable/index.tsx":"82","/home/guilherme/Documentos/Frontend restore/src/components/EditUser/index.tsx":"83","/home/guilherme/Documentos/Frontend restore/src/components/CreateUser/index.tsx":"84","/home/guilherme/Documentos/Frontend restore/src/components/UsersTable/index.tsx":"85","/home/guilherme/Documentos/Frontend restore/src/components/RegisterTable/styles.tsx":"86","/home/guilherme/Documentos/Frontend restore/src/components/Reports/styles.tsx":"87","/home/guilherme/Documentos/Frontend restore/src/components/ProductTable/styles.tsx":"88","/home/guilherme/Documentos/Frontend restore/src/components/EditUser/styles.tsx":"89"},{"size":197,"mtime":1611803929485,"results":"90","hashOfConfig":"91"},{"size":382,"mtime":1616072721549,"results":"92","hashOfConfig":"91"},{"size":466,"mtime":1611953434231,"results":"93","hashOfConfig":"91"},{"size":285,"mtime":1611897642839,"results":"94","hashOfConfig":"91"},{"size":603,"mtime":1620922355723,"results":"95","hashOfConfig":"91"},{"size":1995,"mtime":1616249088278,"results":"96","hashOfConfig":"91"},{"size":1453,"mtime":1611934302292,"results":"97","hashOfConfig":"91"},{"size":1017,"mtime":1617219350876,"results":"98","hashOfConfig":"91"},{"size":244,"mtime":1621448251089,"results":"99","hashOfConfig":"91"},{"size":5916,"mtime":1621281446534,"results":"100","hashOfConfig":"91"},{"size":2682,"mtime":1621971609612,"results":"101","hashOfConfig":"91"},{"size":4457,"mtime":1621342270885,"results":"102","hashOfConfig":"91"},{"size":2115,"mtime":1617218705882,"results":"103","hashOfConfig":"91"},{"size":350,"mtime":1611796903797,"results":"104","hashOfConfig":"91"},{"size":750,"mtime":1612406086383,"results":"105","hashOfConfig":"91"},{"size":1310,"mtime":1620827360042,"results":"106","hashOfConfig":"91"},{"size":989,"mtime":1621971965109,"results":"107","hashOfConfig":"91"},{"size":1274,"mtime":1621004070079,"results":"108","hashOfConfig":"91"},{"size":718,"mtime":1616243696838,"results":"109","hashOfConfig":"91"},{"size":2330,"mtime":1616770523433,"results":"110","hashOfConfig":"91"},{"size":315,"mtime":1612102403043,"results":"111","hashOfConfig":"91"},{"size":1596,"mtime":1615573240682,"results":"112","hashOfConfig":"91"},{"size":3504,"mtime":1621944410332,"results":"113","hashOfConfig":"91"},{"size":3801,"mtime":1616695997672,"results":"114","hashOfConfig":"91"},{"size":1876,"mtime":1620823251707,"results":"115","hashOfConfig":"91"},{"size":2153,"mtime":1621880830160,"results":"116","hashOfConfig":"91"},{"size":2632,"mtime":1621347553869,"results":"117","hashOfConfig":"91"},{"size":4050,"mtime":1617486355388,"results":"118","hashOfConfig":"91"},{"size":11305,"mtime":1621882982625,"results":"119","hashOfConfig":"91"},{"size":5145,"mtime":1616090249717,"results":"120","hashOfConfig":"91"},{"size":4435,"mtime":1621453804860,"results":"121","hashOfConfig":"91"},{"size":162,"mtime":1612231855119,"results":"122","hashOfConfig":"91"},{"size":1260,"mtime":1612545657736,"results":"123","hashOfConfig":"91"},{"size":1002,"mtime":1617220264976,"results":"124","hashOfConfig":"91"},{"size":1638,"mtime":1616028728202,"results":"125","hashOfConfig":"91"},{"size":2705,"mtime":1617633790965,"results":"126","hashOfConfig":"91"},{"size":5501,"mtime":1617628034784,"results":"127","hashOfConfig":"91"},{"size":4673,"mtime":1617487175461,"results":"128","hashOfConfig":"91"},{"size":1194,"mtime":1612545693205,"results":"129","hashOfConfig":"91"},{"size":5829,"mtime":1621960848295,"results":"130","hashOfConfig":"91"},{"size":2969,"mtime":1621627709362,"results":"131","hashOfConfig":"91"},{"size":1961,"mtime":1616786859838,"results":"132","hashOfConfig":"91"},{"size":2383,"mtime":1617217908550,"results":"133","hashOfConfig":"91"},{"size":10231,"mtime":1621531267184,"results":"134","hashOfConfig":"91"},{"size":200,"mtime":1612296236886,"results":"135","hashOfConfig":"91"},{"size":5361,"mtime":1617652506545,"results":"136","hashOfConfig":"91"},{"size":261,"mtime":1612296104473,"results":"137","hashOfConfig":"91"},{"size":1591,"mtime":1616074520128,"results":"138","hashOfConfig":"91"},{"size":518,"mtime":1617217959535,"results":"139","hashOfConfig":"91"},{"size":1214,"mtime":1615664049573,"results":"140","hashOfConfig":"91"},{"size":393,"mtime":1616078136028,"results":"141","hashOfConfig":"91"},{"size":401,"mtime":1612661145860,"results":"142","hashOfConfig":"91"},{"size":11456,"mtime":1617628073285,"results":"143","hashOfConfig":"91"},{"size":1617,"mtime":1615901654249,"results":"144","hashOfConfig":"91"},{"size":2184,"mtime":1615470909288,"results":"145","hashOfConfig":"91"},{"size":6699,"mtime":1621885472249,"results":"146","hashOfConfig":"91"},{"size":449,"mtime":1612364518043,"results":"147","hashOfConfig":"91"},{"size":512,"mtime":1614776856869,"results":"148","hashOfConfig":"91"},{"size":365,"mtime":1612462135110,"results":"149","hashOfConfig":"91"},{"size":833,"mtime":1621960544046,"results":"150","hashOfConfig":"91"},{"size":269,"mtime":1612480474513,"results":"151","hashOfConfig":"91"},{"size":196,"mtime":1616417323407,"results":"152","hashOfConfig":"91"},{"size":1012,"mtime":1612823658482,"results":"153","hashOfConfig":"91"},{"size":1157,"mtime":1617283110662,"results":"154","hashOfConfig":"91"},{"size":1419,"mtime":1612826088110,"results":"155","hashOfConfig":"91"},{"size":754,"mtime":1614777908860,"results":"156","hashOfConfig":"91"},{"size":590,"mtime":1617284640801,"results":"157","hashOfConfig":"91"},{"size":590,"mtime":1617320389271,"results":"158","hashOfConfig":"91"},{"size":710,"mtime":1621954454496,"results":"159","hashOfConfig":"91"},{"size":1905,"mtime":1617283085830,"results":"160","hashOfConfig":"91"},{"size":542,"mtime":1621862128124,"results":"161","hashOfConfig":"91"},{"size":1996,"mtime":1615236275513,"results":"162","hashOfConfig":"91"},{"size":1937,"mtime":1615664204017,"results":"163","hashOfConfig":"91"},{"size":1148,"mtime":1617675129259,"results":"164","hashOfConfig":"91"},{"size":1432,"mtime":1612795936526,"results":"165","hashOfConfig":"91"},{"size":1002,"mtime":1616523763173,"results":"166","hashOfConfig":"91"},{"size":995,"mtime":1616516670064,"results":"167","hashOfConfig":"91"},{"size":365,"mtime":1616699619300,"results":"168","hashOfConfig":"91"},{"size":4548,"mtime":1621960618014,"results":"169","hashOfConfig":"91"},{"size":4753,"mtime":1621960646270,"results":"170","hashOfConfig":"91"},{"size":4161,"mtime":1621946644853,"results":"171","hashOfConfig":"91"},{"size":5358,"mtime":1621960591174,"results":"172","hashOfConfig":"91"},{"size":6321,"mtime":1617320265184,"results":"173","hashOfConfig":"91"},{"size":6277,"mtime":1616695934462,"results":"174","hashOfConfig":"91"},{"size":5923,"mtime":1621960826399,"results":"175","hashOfConfig":"91"},{"size":196,"mtime":1612667305567,"results":"176","hashOfConfig":"91"},{"size":1018,"mtime":1621860318133,"results":"177","hashOfConfig":"91"},{"size":196,"mtime":1621960143422,"results":"178","hashOfConfig":"91"},{"size":1234,"mtime":1616603866647,"results":"179","hashOfConfig":"91"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},"17tzex0",{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"235","usedDeprecatedRules":"182"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"238","usedDeprecatedRules":"182"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"243","usedDeprecatedRules":"182"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"258","usedDeprecatedRules":"182"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"273","usedDeprecatedRules":"182"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"182"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"182"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},"/home/guilherme/Documentos/Frontend restore/src/index.tsx",[],["366","367","368","369","370"],"/home/guilherme/Documentos/Frontend restore/src/App.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/styles/global.ts",[],"/home/guilherme/Documentos/Frontend restore/src/hooks/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/routes/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/hooks/AuthContext.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/hooks/ToastContext.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/routes/Route.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/services/api.ts",[],"/home/guilherme/Documentos/Frontend restore/src/pages/SignIn/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/pages/Report/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/pages/Recover/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/utils/getValidationErrors.ts",[],"/home/guilherme/Documentos/Frontend restore/src/components/ToastContainer/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/pages/SignIn/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/pages/Report/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/pages/Recover/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/GenericAlert/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/Button/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/Input/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/InputReport/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/Users/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/SideBar/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/Products/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/Registers/index.tsx",["371"],"import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport { BiSearch } from 'react-icons/bi';\nimport { searchRegisterOptions, RegisterProps } from '../../../utils/props';\n\nimport Table from '../../../components/RegisterTable';\n\nimport {\n  Title,\n  Container,\n  ButtonDiv,\n  SearchDiv,\n  ContentHeader,\n  StyledButton,\n  FormButton,\n  StyledInputLabel,\n  StyledSelect,\n} from './styles';\nimport api from '../../../services/api';\n\ninterface DateProps {\n  start: string;\n  end: string;\n}\n\nconst Registers: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n  const [finishedData, setFinishedData] = useState(false);\n  const [registers, setRegisters] = useState<RegisterProps[] | undefined>(\n    undefined\n  );\n  const [registerType, setRegisterType] = useState('A');\n\n  useEffect(() => {\n    api.get('registers').then((response) => {\n      setRegisters(response.data);\n      setFinishedData(true);\n    });\n  }, [setFinishedData]);\n\n  const handleSearch = useCallback(\n    (date: DateProps) => {\n      api\n        .get(\n          `/registers/?start=${date.start}&end=${date.end}&type=${registerType}`\n        )\n        .then((response) => {\n          setRegisters(response.data);\n        });\n    },\n    [registerType]\n  );\n\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLSelectElement>) => {\n      const { selectedIndex } = e.target.options;\n      const eventType = e.target.options[selectedIndex].getAttribute('id');\n      if (eventType) {\n        setRegisterType(eventType);\n      }\n    },\n    []\n  );\n\n  return (\n    <Container>\n      <Title>\n        <h1>Registros</h1>\n      </Title>\n      <ContentHeader>\n        <SearchDiv>\n          <Form ref={formRef} onSubmit={handleSearch}>\n            <StyledInputLabel label=\"De\" name=\"start\" type=\"date\" />\n            <StyledInputLabel label=\"Até\" name=\"end\" type=\"date\" />\n            <StyledSelect\n              id=\"selectType\"\n              label=\"Tipo:\"\n              options={searchRegisterOptions}\n              onChange={handleChange}\n            />\n            <FormButton type=\"submit\">\n              <BiSearch size={30} />\n            </FormButton>\n          </Form>\n        </SearchDiv>\n        <ButtonDiv>\n          <NavLink to=\"/dashboard/addRegister\">\n            <StyledButton>Adicionar registro</StyledButton>\n          </NavLink>\n        </ButtonDiv>\n      </ContentHeader>\n      <Table finishedData={finishedData} registers={registers} />\n    </Container>\n  );\n};\n\nexport default Registers;\n","/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/RegisterView/index.tsx",["372","373"],"import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { BsFillExclamationTriangleFill } from 'react-icons/bs';\nimport { SiIfixit } from 'react-icons/si';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\n\nimport { BiSearch } from 'react-icons/bi';\nimport { Container, ButtonDiv, InfoDiv, SearchDiv } from './styles';\nimport api from '../../../services/api';\n\nimport Title from '../../../components/Title';\nimport Loading from '../../../components/Loading';\nimport Alert from '../../../components/Alert';\nimport { useToast } from '../../../hooks/ToastContext';\n\nimport Table from '../../../components/RegisterProductsTable';\n\nimport { ProductProps, RegisterProps } from '../../../utils/props';\nimport getDateBr from '../../../utils/getDateBr';\nimport Input from '../../../components/Input';\n\ninterface ParamsProps {\n  id: string;\n}\n\ninterface SearchProps {\n  search: string;\n}\n\nconst RegisterView: React.FC = () => {\n  const { addToast } = useToast();\n  const { id } = useParams<ParamsProps>();\n\n  const history = useHistory();\n  const formRef = useRef<FormHandles>(null);\n  const [products, setProducts] = useState<ProductProps[] | undefined>(\n    undefined\n  );\n  const [register, setRegister] = useState<RegisterProps | undefined>(\n    undefined\n  );\n  const [productsBuffer, setProductsBuffer] = useState({} as ProductProps[]);\n\n  const handleSearch = useCallback(\n    (data: SearchProps) => {\n      if (data.search.length === 0) {\n        setProducts(productsBuffer);\n      }\n      if (register) {\n        setProducts(\n          register.products.filter((product) =>\n            product.name.includes(data.search)\n          )\n        );\n      }\n    },\n    [register, productsBuffer]\n  );\n\n  const handleConfirm = useCallback(() => {\n    try {\n      api.delete(`registers/${register?.id}`);\n      addToast({\n        type: 'success',\n        title: 'Registro excluído com sucesso.',\n      });\n      setTimeout(() => {\n        history.go(-1);\n      }, 1000);\n    } catch (err) {\n      throw new Error(err);\n    }\n  }, [register, addToast, history]);\n\n  useEffect(() => {\n    api.get(`registers/${id}`).then((response) => {\n      setRegister(response.data);\n      setProducts(response.data.products);\n      setProductsBuffer(response.data.products);\n    });\n  }, [id]);\n\n  if (register) {\n    if (products) {\n      return (\n        <Container>\n          <Title>\n            <h1>Registro de {register.type === 'I' ? 'entrada' : 'saída'}</h1>\n          </Title>\n          <ButtonDiv>\n            <Alert\n              key=\"alert\"\n              title=\"Tem certeza que deseja excluir?\"\n              description={\n                register.type === 'I'\n                  ? 'Os produtos serão excluídos permanentemente.'\n                  : 'Os produtos retornarão para o estoque e demais informações serão perdidas.'\n              }\n              icon={BsFillExclamationTriangleFill}\n              open\n              button\n              handleConfirm={handleConfirm}\n              colorIcon=\"#c74444\"\n              iconButton={SiIfixit}\n            >\n              Excluir\n            </Alert>\n          </ButtonDiv>\n          <InfoDiv>\n            <h1>Informações</h1>\n            <div>\n              <h2>Usuário: </h2>\n              <h3>{register.user.name}</h3>\n            </div>\n            <div>\n              <h2>Data de criação: </h2>\n              <h3>{getDateBr(register.created_at)}</h3>\n            </div>\n          </InfoDiv>\n          <SearchDiv>\n            <Form ref={formRef} onSubmit={handleSearch}>\n              <Input\n                name=\"search\"\n                icon={BiSearch}\n                placeholder=\"Buscar produto...\"\n              />\n              <button type=\"submit\"> </button>\n            </Form>\n          </SearchDiv>\n          <Table products={products} />\n        </Container>\n      );\n    }\n    setProducts(register.products);\n  }\n  return <Loading />;\n};\n\nexport default RegisterView;\n","/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/ProductView/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/Add Register/index.tsx",["374"],"import React, { useCallback, useState } from 'react';\nimport { ImPlus } from 'react-icons/im';\nimport { AiFillCheckCircle } from 'react-icons/ai';\nimport { MdCancel } from 'react-icons/md';\n\nimport { Redirect } from 'react-router-dom';\nimport Table from '../../../components/AddProductTable';\nimport Title from '../../../components/Title';\nimport AddInputProduct from '../../../components/AddInputProduct';\nimport AddOutputProduct from '../../../components/AddOutputProduct';\n\nimport Select from '../../../components/Select';\nimport Button from '../../../components/Button';\nimport Alert from '../../../components/Alert';\n\nimport {\n  Container,\n  Content,\n  ButtonDiv,\n  ButtonSave,\n  ButtonOutDiv,\n} from './styles';\nimport { ProductProps, registerOptions } from '../../../utils/props';\nimport api from '../../../services/api';\nimport { useToast } from '../../../hooks/ToastContext';\n\nconst AddRegister: React.FC = () => {\n  const [registerType, setRegisterType] = useState('I');\n  const [products, setProducts] = useState<ProductProps[] | undefined>(\n    undefined\n  );\n  const [registerCreated, setRegisterCreated] = useState(false);\n\n  const [readOnly, setReadOnly] = useState(false);\n  const [addProduct, setAddProduct] = useState(false);\n  const [toRegister, setToRegister] = useState(false);\n  const [alertView, setAlertView] = useState(false);\n\n  const { addToast } = useToast();\n\n  const handleOpenAlert = useCallback(() => {\n    setAlertView(true);\n  }, []);\n\n  const handleSubmit = useCallback(() => {\n    try {\n      const productsSend = products?.map((product) => {\n        return {\n          ...product,\n          category: product.category.id,\n          provider: product.provider.id,\n          mold: product.mold.id,\n        };\n      });\n      api.post('registers', {\n        type: registerType,\n        products: productsSend,\n      });\n      addToast({\n        type: 'success',\n        title: 'Registro criado com sucesso!',\n      });\n      setTimeout(() => setRegisterCreated(true), 1500);\n    } catch (err) {\n      throw new Error(err);\n    }\n  }, [products, registerType, addToast]);\n\n  const handleSubmitInputProduct = useCallback(\n    (data: ProductProps): void => {\n      if (products) {\n        setProducts([...products, data]);\n      } else {\n        setProducts([data]);\n      }\n      setAddProduct(false);\n    },\n    [setAddProduct, products]\n  );\n\n  const handleSubmitOutputProduct = useCallback(\n    (data: ProductProps[]): void => {\n      setProducts(data);\n    },\n    []\n  );\n\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLSelectElement>) => {\n      const { selectedIndex } = e.target.options;\n      const eventType = e.target.options[selectedIndex].getAttribute('id');\n      if (eventType) {\n        setRegisterType(eventType);\n      }\n    },\n    []\n  );\n\n  const handleAddProduct = useCallback(() => {\n    if (registerType === 'I' || registerType === 'O') {\n      setAddProduct(true);\n    }\n    setReadOnly(true);\n  }, [registerType]);\n\n  const handleProduct = useCallback(\n    (product) => {\n      if (products)\n        setProducts([\n          ...products.filter((obj) => obj.id !== product.id),\n          product,\n        ]);\n    },\n    [products]\n  );\n\n  const handleCancelRegister = useCallback(() => {\n    setToRegister(true);\n  }, []);\n  if (toRegister) return <Redirect to=\"registers\" />;\n  return (\n    <Container>\n      {registerCreated && <Redirect to=\"/dashboard/registers\" />}\n      <Title>\n        <h1>Adicionar registro</h1>\n      </Title>\n      <Content>\n        <h2>\n          Tipo:\n          <Select\n            label=\"\"\n            options={registerOptions}\n            readOnly={readOnly}\n            onChange={handleChange}\n          />\n        </h2>\n\n        {!addProduct && (\n          <ButtonDiv>\n            <Button onClick={handleAddProduct}>\n              <ImPlus />\n              Adicionar produto\n            </Button>\n          </ButtonDiv>\n        )}\n      </Content>\n      {alertView && (\n        <Alert\n          title=\"Tem certeza?\"\n          description=\"Os dados não serão salvos!\"\n          openAlert\n          open\n          handleConfirm={handleCancelRegister}\n          button={false}\n        />\n      )}\n\n      {products && <Table handleProduct={handleProduct} products={products} />}\n\n      {addProduct && registerType === 'I' && (\n        <AddInputProduct handleSubmitProduct={handleSubmitInputProduct} />\n      )}\n      {addProduct && registerType === 'O' && (\n        <AddOutputProduct handleSubmitProduct={handleSubmitOutputProduct} />\n      )}\n      {products && registerType === 'O' && (\n        <ButtonOutDiv>\n          <Button id=\"cancel\" onClick={handleOpenAlert}>\n            <MdCancel size={20} /> Cancelar\n          </Button>\n\n          <Button onClick={handleSubmit}>\n            <AiFillCheckCircle size={20} /> Salvar registro\n          </Button>\n        </ButtonOutDiv>\n      )}\n\n      {products && products.length > 0 && !addProduct ? (\n        <ButtonSave>\n          <Button onClick={handleSubmit}>Salvar registro</Button>\n        </ButtonSave>\n      ) : (\n        ''\n      )}\n    </Container>\n  );\n};\n\nexport default AddRegister;\n","/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/Categories/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/ToastContainer/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/ToastContainer/Toast/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/Categories/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/Add Register/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/utils/props.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/EditCategory/index.tsx",["375"],"import React, {\n  useCallback,\n  useEffect,\n  useState,\n  useRef,\n  ChangeEvent,\n} from 'react';\n\nimport { createStyles, makeStyles } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Dialog, { DialogProps } from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\n\nimport LabelInput from '../LabelInput';\nimport { CategoryProps } from '../../utils/props';\nimport { useToast } from '../../hooks/ToastContext';\nimport getValidationErrors from '../../utils/getValidationErrors';\nimport { Textarea } from './styles';\nimport api from '../../services/api';\nimport Loading from '../Loading';\n\nexport type CategoryCreated = Partial<CategoryProps>;\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    colorPrimary: {\n      color: '#82af99',\n    },\n    colorSecondary: {\n      color: '#9c9b9b',\n    },\n    form: {\n      // display: 'flex',\n      margin: '30px 50px',\n      flexDirection: 'row',\n      placeContent: 'center',\n    },\n  })\n);\n\ninterface AlertProps extends DialogProps {\n  openAlert?: boolean;\n  handleConfirm: (category: CategoryCreated) => void;\n  handleCancel: () => void;\n  idEdit: string;\n}\nconst Alert: React.FC<AlertProps> = ({\n  handleConfirm,\n  handleCancel,\n  openAlert,\n  idEdit,\n  ...rest\n}) => {\n  const formRef = useRef<FormHandles>(null);\n  const [isDescriptionFocused, setIsDesciptionFocused] = useState(false);\n  const [category, setCategory] = useState<CategoryProps | undefined>(\n    undefined\n  );\n  const [description, setDescription] = useState('');\n\n  const classes = useStyles();\n  const { addToast } = useToast();\n\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    if (openAlert) setOpen(true);\n    api.get(`categories/${idEdit}`).then((response) => {\n      setDescription(response.data.description);\n      setCategory(response.data);\n    });\n  }, [openAlert, idEdit]);\n\n  const handleSubmit = useCallback(\n    async (data: CategoryProps) => {\n      formRef.current?.setErrors({});\n      try {\n        let schema = Yup.object().shape({\n          name: Yup.string().required('Nome obrigatório'),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n        const categoryEdited: CategoryProps = {\n          id: idEdit,\n          name: data.name,\n          description,\n          category_number: 0, // o código é gerado automaticamente no backend,\n          // só esta definido como 0 pra não ter erro de tipagem\n        };\n        setOpen(false);\n\n        handleConfirm(categoryEdited);\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n          formRef.current?.setErrors(errors);\n          return;\n        }\n\n        addToast({\n          title: 'Ops!',\n          type: 'error',\n          description: 'Algo deu errado. Verifique as informações',\n        });\n      }\n    },\n    [addToast, handleConfirm, idEdit, description]\n  );\n\n  const handleChangeDescription = useCallback(\n    (e: ChangeEvent<HTMLTextAreaElement>) => {\n      setDescription(e.target.value);\n    },\n    []\n  );\n  const handleCancelButton = useCallback(() => {\n    setOpen(false);\n    handleCancel();\n  }, [handleCancel]);\n\n  return (\n    <Dialog\n      {...rest}\n      open={open}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n      fullWidth\n      maxWidth=\"xs\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">Editar categoria</DialogTitle>\n\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          {!category ? (\n            <Loading />\n          ) : (\n            <Form\n              ref={formRef}\n              onSubmit={handleSubmit}\n              id=\"category-form\"\n              className={classes.form}\n            >\n              <div>\n                <LabelInput\n                  label=\"Nome\"\n                  name=\"name\"\n                  defaultValue={category.name}\n                />\n                <Textarea\n                  isFocused={isDescriptionFocused}\n                  onFocus={() => setIsDesciptionFocused(true)}\n                  onBlur={() => setIsDesciptionFocused(false)}\n                  defaultValue={category.description}\n                >\n                  <p>Descrição</p>\n                  <div>\n                    <textarea\n                      name=\"description\"\n                      onChange={(e) => handleChangeDescription(e)}\n                      defaultValue={description}\n                    />\n                  </div>\n                </Textarea>\n              </div>\n            </Form>\n          )}\n        </DialogContentText>\n\n        <DialogActions>\n          <Button\n            onClick={handleCancelButton}\n            className={classes.colorSecondary}\n            color=\"secondary\"\n            autoFocus\n          >\n            Cancelar\n          </Button>\n          <Button\n            type=\"submit\"\n            form=\"category-form\"\n            className={classes.colorPrimary}\n            color=\"primary\"\n          >\n            Confirmar\n          </Button>\n        </DialogActions>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default Alert;\n","/home/guilherme/Documentos/Frontend restore/src/components/CreateCategory/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/ToastContainer/Toast/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/CategoriesTable/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/Alert/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/Select/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/AddOutputProduct/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/AddInputProduct/index.tsx",["376","377","378"],"import React, {\n  ChangeEvent,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\n\nimport { Redirect } from 'react-router-dom';\nimport api from '../../services/api';\nimport LabelInput from '../LabelInput';\nimport InputFloat from '../InputFloat';\n\nimport { Container, InputForm } from './styles';\nimport Button from '../Button';\nimport Select from '../Select';\nimport Textarea from '../Textarea';\n\nimport {\n  CategoryProps,\n  MoldProps,\n  ProviderProps,\n  ProductProps,\n  sizeOptions,\n  typeOptions,\n  genreOptions,\n} from '../../utils/props';\nimport { useToast } from '../../hooks/ToastContext';\nimport getValidationErrors from '../../utils/getValidationErrors';\n\ninterface AddInputProductProps {\n  handleSubmitProduct?: (data: ProductProps) => void;\n}\n\nconst AddProduct: React.FC<AddInputProductProps> = ({\n  handleSubmitProduct,\n}) => {\n  const formRef = useRef<FormHandles>(null);\n  const { addToast } = useToast();\n\n  const [categories, setCategories] = useState<CategoryProps[]>(\n    {} as CategoryProps[]\n  );\n  const [molds, setMolds] = useState<MoldProps[]>({} as MoldProps[]);\n  const [providers, setProviders] = useState<ProviderProps[]>(\n    {} as ProviderProps[]\n  );\n\n  const [sizeSelect, setSizeSelect] = useState<string | undefined>(undefined);\n  const [genreSelect, setGenreSelect] = useState<string | undefined>(undefined);\n  const [typeSelect, setTypeSelect] = useState<string | undefined>(undefined);\n  const [moldSelect, setMoldSelect] = useState<MoldProps | undefined>(\n    undefined\n  );\n  const [categorySelect, setCategorySelect] = useState<\n    CategoryProps | undefined\n  >(undefined);\n  const [providerSelect, setProviderSelect] = useState<\n    ProviderProps | undefined\n  >(undefined);\n  const [redirect, setRedirect] = useState(false);\n  const [obs, setObs] = useState('');\n\n  const handleSubmit = useCallback(\n    async (data) => {\n      formRef.current?.setErrors({});\n      try {\n        if (!typeSelect) {\n          addToast({\n            title: 'Erro no tipo de compra',\n            description: 'Por favor insira o tipo de compra',\n            type: 'error',\n          });\n        }\n        if (!sizeSelect) {\n          addToast({\n            title: 'Erro no tamanho',\n            description: 'Por favor insira o tamanho',\n            type: 'error',\n          });\n        }\n        if (!genreSelect) {\n          addToast({\n            title: 'Erro no gênero',\n            description: 'Por favor insira o gênero',\n            type: 'error',\n          });\n        }\n        if (!providerSelect) {\n          addToast({\n            title: 'Erro no fornecedor',\n            description: 'Por favor insira o fornecedor',\n            type: 'error',\n          });\n        }\n        if (!categorySelect) {\n          addToast({\n            title: 'Erro na categoria',\n            description: 'Por favor insira a categoria',\n            type: 'error',\n          });\n        }\n        if (!moldSelect) {\n          addToast({\n            title: 'Erro no modelo',\n            description: 'Por favor insira o modelo',\n            type: 'error',\n          });\n        }\n        const schema = Yup.object().shape({\n          name: Yup.string().required('Nome obrigatório'),\n          color: Yup.string().required('Cor obrigatória'),\n          purchase_value: Yup.string().required('Valor de compra obrigatório'),\n          sale_value: Yup.string().required('Valor de venda obrigatório'),\n        });\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n        if (\n          !typeSelect ||\n          !genreSelect ||\n          !sizeSelect ||\n          !categorySelect ||\n          !moldSelect ||\n          !providerSelect\n        )\n          return;\n\n        const purchaseValueString: string = data.purchase_value\n          .replace('R$', '')\n          .replace(',', '.');\n        const purchaseValue = parseFloat(purchaseValueString);\n\n        const saleValueString: string = data.sale_value\n          .replace('R$', '')\n          .replace(',', '.');\n        const saleValue = parseFloat(saleValueString);\n        const product: ProductProps = {\n          id: Math.random().toString(),\n          name: data.name,\n          color: data.color,\n          brand: data.brand,\n          purchase_value: purchaseValue,\n          sale_value: saleValue,\n          genre: genreSelect,\n          size: sizeSelect,\n          purchase_type: typeSelect,\n          category: categorySelect,\n          mold: moldSelect,\n          provider: providerSelect,\n          obs,\n        } as ProductProps;\n        if (handleSubmitProduct) handleSubmitProduct(product);\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n          formRef.current?.setErrors(errors);\n          return;\n        }\n\n        addToast({\n          title: 'Erro',\n          type: 'error',\n          description: 'Verifique as informações',\n        });\n        throw new Error(err);\n      }\n    },\n    [\n      addToast,\n      categorySelect,\n      moldSelect,\n      providerSelect,\n      genreSelect,\n      sizeSelect,\n      typeSelect,\n      handleSubmitProduct,\n      obs,\n    ]\n  );\n\n  useEffect(() => {\n    api.get(`categories`).then((response) => {\n      setCategories(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    api.get(`models`).then((response) => {\n      setMolds(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    api.get(`providers`).then((response) => {\n      setProviders(response.data);\n    });\n  }, []);\n\n  const handleObsChange = useCallback(\n    (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n      setObs(e.target.value);\n    },\n    [setObs]\n  );\n\n  const handleRedirect = useCallback(() => {\n    setRedirect(true);\n  }, []);\n\n  const handleType = useCallback((e: ChangeEvent<HTMLSelectElement>) => {\n    const { selectedIndex } = e.target.options;\n    const eventType = e.target.options[selectedIndex].getAttribute('id');\n    if (eventType) {\n      setTypeSelect(eventType);\n    }\n  }, []);\n  const handleMold = useCallback((e: ChangeEvent<HTMLSelectElement>) => {\n    const { selectedIndex } = e.target.options;\n    const eventMold = e.target.options[selectedIndex].getAttribute('id');\n    const moldName = e.target.value;\n    if (eventMold) {\n      setMoldSelect({ id: eventMold, name: moldName });\n    }\n  }, []);\n  const handleCategory = useCallback((e: ChangeEvent<HTMLSelectElement>) => {\n    const { selectedIndex } = e.target.options;\n    const eventCategoryId = e.target.options[selectedIndex].getAttribute('id');\n    const eventCategoryName = e.target.value;\n    if (eventCategoryId) {\n      setCategorySelect({\n        id: eventCategoryId,\n        name: eventCategoryName,\n        category_number: 0,\n      });\n    }\n  }, []);\n  const handleProvider = useCallback((e: ChangeEvent<HTMLSelectElement>) => {\n    const { selectedIndex } = e.target.options;\n    const eventProvider = e.target.options[selectedIndex].getAttribute('id');\n    const providerName = e.target.value;\n    if (eventProvider) {\n      setProviderSelect({ id: eventProvider, name: providerName });\n    }\n  }, []);\n  const handleGenre = useCallback((e: ChangeEvent<HTMLSelectElement>) => {\n    const { selectedIndex } = e.target.options;\n    const eventGenre = e.target.options[selectedIndex].getAttribute('id');\n    if (eventGenre) {\n      setGenreSelect(eventGenre);\n    }\n  }, []);\n  const handleSize = useCallback((e: ChangeEvent<HTMLSelectElement>) => {\n    const { selectedIndex } = e.target.options;\n    const eventSize = e.target.options[selectedIndex].getAttribute('id');\n    if (eventSize) {\n      setSizeSelect(eventSize);\n    }\n  }, []);\n\n  if (redirect) return <Redirect to=\"registers\" />;\n  return (\n    <Container>\n      <Form ref={formRef} onSubmit={handleSubmit}>\n        <h1>Informações</h1>\n\n        <InputForm>\n          <div>\n            <LabelInput name=\"name\" label=\"Nome\" />\n\n            <LabelInput name=\"color\" label=\"Cor\" />\n\n            <LabelInput name=\"brand\" label=\"Marca\" />\n            <Select\n              name=\"genre\"\n              id=\"genre\"\n              options={genreOptions}\n              onChange={handleGenre}\n              label=\"Gênero\"\n              hasDefaultValue\n            />\n            <Select\n              name=\"size\"\n              id=\"size\"\n              options={sizeOptions}\n              onChange={handleSize}\n              label=\"Tamanho\"\n              hasDefaultValue\n            />\n          </div>\n          <div>\n            <Select\n              name=\"type\"\n              id=\"type\"\n              options={typeOptions}\n              onChange={handleType}\n              label=\"Tipo de compra\"\n              hasDefaultValue\n            />\n            <Select\n              name=\"mold\"\n              id=\"mold\"\n              options={molds}\n              onChange={handleMold}\n              label=\"Modelo\"\n              hasDefaultValue\n            />\n\n            <Select\n              name=\"provider\"\n              id=\"provider\"\n              options={providers}\n              onChange={handleProvider}\n              label=\"Fornecedor\"\n              hasDefaultValue\n            />\n            <Select\n              name=\"category\"\n              id=\"category\"\n              options={categories}\n              onChange={handleCategory}\n              label=\"Categoria\"\n              hasDefaultValue\n            />\n          </div>\n        </InputForm>\n        <h1>Valores</h1>\n        <InputForm>\n          <div>\n            <InputFloat\n              name=\"purchase_value\"\n              id=\"purchase_value\"\n              label=\"Valor de compra\"\n            />\n\n            <InputFloat\n              label=\"Valor de venda\"\n              name=\"sale_value\"\n              id=\"sale_value\"\n            />\n          </div>\n        </InputForm>\n        <h1>Observações</h1>\n        <Textarea name=\"obs\" onChange={handleObsChange} value={obs} />\n\n        <Button type=\"submit\">Adicionar</Button>\n        <Button type=\"button\" onClick={handleRedirect}>\n          Cancelar\n        </Button>\n      </Form>\n    </Container>\n  );\n};\n\nexport default AddProduct;\n","/home/guilherme/Documentos/Frontend restore/src/components/Title/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/AddProductTable/index.tsx",["379","380","381","382"],"import React, { useCallback, useState } from 'react';\nimport {\n  withStyles,\n  Theme,\n  createStyles,\n  makeStyles,\n} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { FaRegEdit } from 'react-icons/fa';\nimport { SiIfixit } from 'react-icons/si';\n\nimport EditProduct from '../EditProduct';\n\nimport { ProductProps } from '../../utils/props';\nimport Loading from '../Loading';\n\nconst alignTitle = 'left';\n\nconst StyledTableCell = withStyles((theme: Theme) =>\n  createStyles({\n    head: {\n      backgroundColor: theme.palette.common.white,\n      color: theme.palette.common.black,\n    },\n    body: {\n      fontSize: 14,\n    },\n  })\n)(TableCell);\n\nconst useStyles = makeStyles({\n  button: {\n    MaxHeight: '100%',\n    MaxWidth: '100%',\n    backgroundColor: '#82af99',\n    color: '#fff',\n    borderRadius: '5px',\n    padding: '2px 2px 0px 2px',\n    marginRight: '8px',\n  },\n  excludeButton: {\n    MaxHeight: '100%',\n    MaxWidth: '100%',\n    padding: '2px 2px 0px 2px',\n    backgroundColor: '#c74444',\n    color: '#fff',\n    borderRadius: '5px',\n  },\n  styledRow: {\n    width: '100%',\n    border: 'transparent',\n    background: 'transparent',\n  },\n  buttonCell: {\n    flexDirection: 'row',\n  },\n  table: {\n    height: '100%',\n  },\n});\n\nconst StyledTableRow = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.action.hover,\n        '&:hover': {\n          backgroundColor: '#b9b9b9',\n        },\n      },\n      '&:nth-of-type(even)': {\n        '&:hover': {\n          backgroundColor: '#b9b9b9',\n        },\n      },\n      marginTop: '5px',\n    },\n  })\n)(TableRow);\n\ninterface TableProps {\n  products: ProductProps[];\n  handleProduct: (data: ProductProps) => void;\n}\n\nconst CustomizedTables: React.FC<TableProps> = ({\n  products,\n  handleProduct,\n}) => {\n  const classes = useStyles();\n  const [editProduct, setEditProduct] = useState(false);\n  const [productToEdit, setProductToEdit] = useState<ProductProps>(\n    {} as ProductProps\n  );\n  const [productsTable, setProductsTable] = useState<ProductProps[]>(products);\n\n  const handleEdit = useCallback((product: ProductProps) => {\n    setEditProduct(true);\n    setProductToEdit(product);\n  }, []);\n  const handleEditedProduct = useCallback(\n    (data: ProductProps) => {\n      setEditProduct(false);\n      handleProduct(data);\n    },\n    [handleProduct]\n  );\n\n  if (productsTable) {\n    return (\n      <>\n        <TableContainer component={Paper}>\n          <Table aria-label=\"customized table\">\n            <TableHead>\n              <TableRow>\n                <StyledTableCell align={alignTitle}>Nome</StyledTableCell>\n                <StyledTableCell align={alignTitle}>Modelo</StyledTableCell>\n                <StyledTableCell align={alignTitle}>Categoria</StyledTableCell>\n                <StyledTableCell align={alignTitle}>Gênero</StyledTableCell>\n                <StyledTableCell align={alignTitle}>Venda</StyledTableCell>\n                <StyledTableCell align={alignTitle}> </StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {products.map((product) => (\n                <StyledTableRow key={product.id}>\n                  <StyledTableCell align=\"left\">{product.name}</StyledTableCell>\n                  <StyledTableCell align=\"left\">\n                    {product.mold.name}\n                  </StyledTableCell>\n                  <StyledTableCell align=\"left\">\n                    {product.category.name}\n                  </StyledTableCell>\n                  <StyledTableCell align=\"left\">\n                    {product.genre === 'F' ? 'Feminino' : 'Masculino'}\n                  </StyledTableCell>\n                  <StyledTableCell align=\"left\">\n                    {product.sale_value.toLocaleString('pt-br', {\n                      style: 'currency',\n                      currency: 'BRL',\n                    })}\n                  </StyledTableCell>\n                  <StyledTableCell align=\"left\" className={classes.buttonCell}>\n                    {/* <button\n                      id=\"edit-button\"\n                      type=\"button\"\n                      onClick={() => handleEdit(product)}\n                      className={classes.button}\n                    >\n                      <FaRegEdit size={20} />\n                    </button> */}\n                    {/* <button\n                      id=\"exclude-button\"\n                      type=\"button\"\n                      className={classes.excludeButton}\n                    >\n                      <SiIfixit size={20} />\n                    </button> */}\n                  </StyledTableCell>\n                </StyledTableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        {editProduct && (\n          <EditProduct\n            handleEditedProduct={handleEditedProduct}\n            editProduct={productToEdit}\n          />\n        )}\n      </>\n    );\n  }\n  return <Loading />;\n};\nexport default CustomizedTables;\n","/home/guilherme/Documentos/Frontend restore/src/components/Title/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/AddInputProduct/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/AddOutputProduct/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/Select/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/Alert/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/Loading/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/EditProduct/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/Textarea/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/InputFloat/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/OutputTable/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/LabelInput/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/ButtonTooltip/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/Tooltip/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/ButtonTooltip/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/LabelInput/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/OutputTable/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/InputFloat/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/Textarea/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/EditProduct/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/Loading/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/CreateCategory/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/EditCategory/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/Tooltip/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/ProductView/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/utils/getDateBr.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/RegisterView/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/Registers/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/Products/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/SideBar/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/Users/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/Input/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/Button/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/RegisterProductsTable/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/RegisterTable/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/Reports/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/ProductTable/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/EditUser/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/CreateUser/index.tsx",["383"],"import React, { useCallback, useEffect, useState, useRef } from 'react';\n\nimport { createStyles, makeStyles, withStyles } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Dialog, { DialogProps } from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Switch from '@material-ui/core/Switch';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\n\nimport LabelInput from '../LabelInput';\nimport { UserProps } from '../../utils/props';\nimport { useToast } from '../../hooks/ToastContext';\nimport getValidationErrors from '../../utils/getValidationErrors';\nimport api from '../../services/api';\n\nexport type UserCreated = Partial<UserProps>;\n\ninterface SubmitProps extends UserProps {\n  repeatPassowrd: string;\n}\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    colorPrimary: {\n      color: '#82af99',\n    },\n    colorSecondary: {\n      color: '#9c9b9b',\n    },\n    form: {\n      height: '300px',\n      display: 'flex',\n      flexDirection: 'row',\n      placeContent: 'center',\n    },\n    rightDiv: {\n      width: '300px',\n      margin: '0 40px',\n    },\n    leftDiv: {\n      width: '300px',\n      margin: '0 40px',\n    },\n    admDiv: {\n      display: 'flex',\n      marginTop: '37px',\n      marginBottom: '18px',\n      alignItems: 'center',\n    },\n    dialog: {\n      margin: '0px 20px',\n    },\n  })\n);\nconst GreenSwitch = withStyles({\n  root: {},\n  switchBase: {\n    '&$checked': {\n      color: '#82af99',\n    },\n    '&$checked + $track': {\n      backgroundColor: '#82af99',\n    },\n  },\n  checked: {},\n  track: {},\n})(Switch);\n\ninterface AlertProps extends DialogProps {\n  openAlert?: boolean;\n  handleConfirm: (user: UserCreated) => void;\n  handleCancel: () => void;\n}\nconst Alert: React.FC<AlertProps> = ({\n  handleConfirm,\n  handleCancel,\n  openAlert,\n  ...rest\n}) => {\n  const formRef = useRef<FormHandles>(null);\n  const classes = useStyles();\n  const { addToast } = useToast();\n\n  const [open, setOpen] = useState(false);\n  const [checked, setChecked] = useState(false);\n\n  useEffect(() => {\n    if (openAlert) setOpen(true);\n  }, [openAlert]);\n\n  const handleSubmit = useCallback(\n    async (data: SubmitProps) => {\n      formRef.current?.setErrors({});\n      try {\n        let schema = Yup.object().shape({\n          name: Yup.string().required('Nome obrigatório'),\n          login: Yup.string().required('Login obrigatório'),\n          password: Yup.string()\n            .required('Senha obrigatória')\n            .min(6, 'No mínimo 6 dígitos'),\n          repeatPassword: Yup.string().oneOf(\n            [Yup.ref('password'), null],\n            'As senhas não conferem'\n          ),\n        });\n        const schemaAdministrator = Yup.object().shape({\n          email: Yup.string()\n            .required('E-mail obrigatório')\n            .email('E-mail inválido.'),\n        });\n        let newSchema;\n        if (checked) {\n          newSchema = schema.concat(schemaAdministrator);\n        } else {\n          newSchema = schema;\n        }\n        await newSchema.validate(data, {\n          abortEarly: false,\n        });\n        addToast({\n          type: 'success',\n          title: 'Usuário cadastrado com sucesso.',\n        });\n\n        setOpen(false);\n        const userCreated: UserCreated = {\n          name: data.name,\n          password: data.password,\n          administrator: checked,\n          login: data.login,\n          email: data.email,\n        };\n        handleConfirm(userCreated);\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n          formRef.current?.setErrors(errors);\n          return;\n        }\n\n        addToast({\n          title: 'Ops!',\n          type: 'error',\n          description: 'Algo deu errado. Verifique as informações',\n        });\n      }\n    },\n    [addToast, handleConfirm, checked]\n  );\n\n  const handleSwitchChange = useCallback(() => {\n    setChecked(!checked);\n  }, [checked]);\n\n  const handleCancelButton = useCallback(() => {\n    setOpen(false);\n    handleCancel();\n  }, [handleCancel]);\n\n  return (\n    <Dialog\n      {...rest}\n      open={open}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n      fullWidth\n      maxWidth=\"md\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">Cadastrar novo usuário</DialogTitle>\n\n      <DialogContent className={classes.dialog}>\n        <DialogContentText id=\"alert-dialog-description\">\n          <Form\n            ref={formRef}\n            onSubmit={handleSubmit}\n            id=\"user-form\"\n            className={classes.form}\n          >\n            <div className={classes.leftDiv}>\n              <LabelInput label=\"Nome\" name=\"name\" />\n              <LabelInput label=\"Usuário\" name=\"login\" />\n              <div className={classes.admDiv}>\n                <GreenSwitch\n                  checked={checked}\n                  onChange={handleSwitchChange}\n                  form=\"user-form\"\n                />\n                <h3>Administrador</h3>\n              </div>\n            </div>\n            <div className={classes.rightDiv}>\n              <LabelInput label=\"Senha\" name=\"password\" type=\"password\" />\n              <LabelInput\n                label=\"Repetir senha\"\n                name=\"repeatPassword\"\n                type=\"password\"\n              />\n              {checked && <LabelInput label=\"E-mail\" name=\"email\" />}\n            </div>\n          </Form>\n        </DialogContentText>\n        <DialogActions>\n          <Button\n            onClick={handleCancelButton}\n            className={classes.colorSecondary}\n            color=\"secondary\"\n            autoFocus\n          >\n            Cancelar\n          </Button>\n          <Button\n            type=\"submit\"\n            form=\"user-form\"\n            className={classes.colorPrimary}\n            color=\"primary\"\n          >\n            Confirmar\n          </Button>\n        </DialogActions>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default Alert;\n","/home/guilherme/Documentos/Frontend restore/src/components/UsersTable/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/RegisterTable/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/Reports/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/ProductTable/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/EditUser/styles.tsx",[],{"ruleId":"384","replacedBy":"385"},{"ruleId":"386","replacedBy":"387"},{"ruleId":"388","replacedBy":"389"},{"ruleId":"390","replacedBy":"391"},{"ruleId":"392","replacedBy":"393"},{"ruleId":"394","severity":1,"message":"395","line":31,"column":36,"nodeType":null,"messageId":"396","endLine":33,"endColumn":3,"fix":"397"},{"ruleId":"394","severity":1,"message":"398","line":38,"column":34,"nodeType":null,"messageId":"396","endLine":40,"endColumn":3,"fix":"399"},{"ruleId":"394","severity":1,"message":"400","line":41,"column":34,"nodeType":null,"messageId":"396","endLine":43,"endColumn":3,"fix":"401"},{"ruleId":"394","severity":1,"message":"398","line":29,"column":34,"nodeType":null,"messageId":"396","endLine":31,"endColumn":3,"fix":"402"},{"ruleId":"394","severity":1,"message":"403","line":62,"column":34,"nodeType":null,"messageId":"396","endLine":64,"endColumn":3,"fix":"404"},{"ruleId":"394","severity":1,"message":"405","line":55,"column":38,"nodeType":null,"messageId":"396","endLine":57,"endColumn":3,"fix":"406"},{"ruleId":"394","severity":1,"message":"407","line":58,"column":46,"nodeType":null,"messageId":"396","endLine":60,"endColumn":3,"fix":"408"},{"ruleId":"394","severity":1,"message":"409","line":61,"column":46,"nodeType":null,"messageId":"396","endLine":63,"endColumn":3,"fix":"410"},{"ruleId":"411","severity":1,"message":"412","line":15,"column":10,"nodeType":"413","messageId":"414","endLine":15,"endColumn":19},{"ruleId":"411","severity":1,"message":"415","line":16,"column":10,"nodeType":"413","messageId":"414","endLine":16,"endColumn":18},{"ruleId":"411","severity":1,"message":"416","line":101,"column":25,"nodeType":"413","messageId":"414","endLine":101,"endColumn":41},{"ruleId":"411","severity":1,"message":"417","line":103,"column":9,"nodeType":"413","messageId":"414","endLine":103,"endColumn":19},{"ruleId":"411","severity":1,"message":"418","line":19,"column":8,"nodeType":"413","messageId":"414","endLine":19,"endColumn":11},"lines-around-directive",["419"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"prettier/prettier","Replace `·useState<RegisterProps[]·|·undefined>(⏎····undefined⏎··` with `⏎····useState<RegisterProps[]·|·undefined>(undefined`","replace",{"range":"420","text":"421"},"Replace `·useState<ProductProps[]·|·undefined>(⏎····undefined⏎··` with `⏎····useState<ProductProps[]·|·undefined>(undefined`",{"range":"422","text":"423"},"Replace `·useState<RegisterProps·|·undefined>(⏎····undefined⏎··` with `⏎····useState<RegisterProps·|·undefined>(undefined`",{"range":"424","text":"425"},{"range":"426","text":"423"},"Replace `·useState<CategoryProps·|·undefined>(⏎····undefined⏎··` with `⏎····useState<CategoryProps·|·undefined>(undefined`",{"range":"427","text":"428"},"Replace `·useState<MoldProps·|·undefined>(⏎····undefined⏎··` with `⏎····useState<MoldProps·|·undefined>(undefined`",{"range":"429","text":"430"},"Replace `·useState<⏎····CategoryProps·|·undefined⏎··` with `⏎····useState<CategoryProps·|·undefined`",{"range":"431","text":"432"},"Replace `·useState<⏎····ProviderProps·|·undefined⏎··` with `⏎····useState<ProviderProps·|·undefined`",{"range":"433","text":"434"},"@typescript-eslint/no-unused-vars","'FaRegEdit' is defined but never used.","Identifier","unusedVar","'SiIfixit' is defined but never used.","'setProductsTable' is assigned a value but never used.","'handleEdit' is assigned a value but never used.","'api' is defined but never used.","padding-line-between-statements",[807,863],"\n    useState<RegisterProps[] | undefined>(undefined",[1220,1275],"\n    useState<ProductProps[] | undefined>(undefined",[1311,1365],"\n    useState<RegisterProps | undefined>(undefined",[1014,1069],[1732,1786],"\n    useState<CategoryProps | undefined>(undefined",[1580,1630],"\n    useState<MoldProps | undefined>(undefined",[1678,1721],"\n    useState<CategoryProps | undefined",[1780,1823],"\n    useState<ProviderProps | undefined"]