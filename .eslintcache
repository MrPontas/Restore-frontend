[{"/home/guilherme/Documentos/Frontend restore/src/index.tsx":"1","/home/guilherme/Documentos/Frontend restore/src/App.tsx":"2","/home/guilherme/Documentos/Frontend restore/src/styles/global.ts":"3","/home/guilherme/Documentos/Frontend restore/src/pages/SignIn/index.tsx":"4","/home/guilherme/Documentos/Frontend restore/src/pages/SignIn/styles.tsx":"5","/home/guilherme/Documentos/Frontend restore/src/components/Button/index.tsx":"6","/home/guilherme/Documentos/Frontend restore/src/components/Input/index.tsx":"7","/home/guilherme/Documentos/Frontend restore/src/utils/getValidationErrors.ts":"8","/home/guilherme/Documentos/Frontend restore/src/components/Tooltip/index.tsx":"9","/home/guilherme/Documentos/Frontend restore/src/components/Tooltip/styles.tsx":"10","/home/guilherme/Documentos/Frontend restore/src/services/api.ts":"11","/home/guilherme/Documentos/Frontend restore/src/hooks/AuthContext.tsx":"12","/home/guilherme/Documentos/Frontend restore/src/components/ToastContainer/index.tsx":"13","/home/guilherme/Documentos/Frontend restore/src/components/ToastContainer/styles.tsx":"14","/home/guilherme/Documentos/Frontend restore/src/hooks/index.tsx":"15","/home/guilherme/Documentos/Frontend restore/src/hooks/ToastContext.tsx":"16","/home/guilherme/Documentos/Frontend restore/src/components/ToastContainer/Toast/index.tsx":"17","/home/guilherme/Documentos/Frontend restore/src/routes/index.tsx":"18","/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/index.tsx":"19","/home/guilherme/Documentos/Frontend restore/src/routes/Route.tsx":"20","/home/guilherme/Documentos/Frontend restore/src/components/SideBar/index.tsx":"21","/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/styles.tsx":"22","/home/guilherme/Documentos/Frontend restore/src/components/SideBar/styles.tsx":"23","/home/guilherme/Documentos/Frontend restore/src/components/ToastContainer/Toast/styles.tsx":"24","/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/Products/index.tsx":"25","/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/Products/styles.tsx":"26","/home/guilherme/Documentos/Frontend restore/src/components/ProductTable/index.tsx":"27","/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/ProductView/index.tsx":"28","/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/ProductView/styles.tsx":"29","/home/guilherme/Documentos/Frontend restore/src/components/Title/index.tsx":"30","/home/guilherme/Documentos/Frontend restore/src/components/Title/styles.tsx":"31","/home/guilherme/Documentos/Frontend restore/src/components/Button/styles.tsx":"32","/home/guilherme/Documentos/Frontend restore/src/components/LabelInput/index.tsx":"33","/home/guilherme/Documentos/Frontend restore/src/components/LabelInput/styles.tsx":"34","/home/guilherme/Documentos/Frontend restore/src/components/Select/index.tsx":"35","/home/guilherme/Documentos/Frontend restore/src/components/Select/styles.tsx":"36","/home/guilherme/Documentos/Frontend restore/src/components/Input/styles.tsx":"37","/home/guilherme/Documentos/Frontend restore/src/components/InputFloat/index.tsx":"38","/home/guilherme/Documentos/Frontend restore/src/components/InputFloat/styles.tsx":"39","/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/Registers/index.tsx":"40","/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/Registers/styles.tsx":"41","/home/guilherme/Documentos/Frontend restore/src/components/RegisterTable/index.tsx":"42","/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/RegisterView/index.tsx":"43","/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/RegisterView/styles.tsx":"44","/home/guilherme/Documentos/Frontend restore/src/components/Loading/index.tsx":"45","/home/guilherme/Documentos/Frontend restore/src/components/Loading/styles.tsx":"46","/home/guilherme/Documentos/Frontend restore/src/utils/getDateBr.tsx":"47","/home/guilherme/Documentos/Frontend restore/src/components/RegisterProductsTable/index.tsx":"48","/home/guilherme/Documentos/Frontend restore/src/components/Alert/index.tsx":"49","/home/guilherme/Documentos/Frontend restore/src/components/Alert/styles.tsx":"50","/home/guilherme/Documentos/Frontend restore/src/components/RegisterTable/styles.tsx":"51","/home/guilherme/Documentos/Frontend restore/src/components/ProductTable/styles.tsx":"52","/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/Add Register/index.tsx":"53","/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/Add Register/styles.tsx":"54","/home/guilherme/Documentos/Frontend restore/src/components/AddProductTable/index.tsx":"55","/home/guilherme/Documentos/Frontend restore/src/components/EditProduct/index.tsx":"56","/home/guilherme/Documentos/Frontend restore/src/components/EditProduct/styles.tsx":"57","/home/guilherme/Documentos/Frontend restore/src/components/ButtonTooltip/index.tsx":"58","/home/guilherme/Documentos/Frontend restore/src/components/ButtonTooltip/styles.tsx":"59","/home/guilherme/Documentos/Frontend restore/src/utils/props.tsx":"60","/home/guilherme/Documentos/Frontend restore/src/utils/sortObjectArray.tsx":"61","/home/guilherme/Documentos/Frontend restore/src/components/LabelText/index.tsx":"62","/home/guilherme/Documentos/Frontend restore/src/components/LabelText/styles.tsx":"63","/home/guilherme/Documentos/Frontend restore/src/components/Textarea/index.tsx":"64","/home/guilherme/Documentos/Frontend restore/src/components/Textarea/styles.tsx":"65","/home/guilherme/Documentos/Frontend restore/src/components/AddInputProduct/index.tsx":"66","/home/guilherme/Documentos/Frontend restore/src/components/AddInputProduct/styles.tsx":"67","/home/guilherme/Documentos/Frontend restore/src/components/AddOutputProduct/index.tsx":"68","/home/guilherme/Documentos/Frontend restore/src/components/AddOutputProduct/styles.tsx":"69","/home/guilherme/Documentos/Frontend restore/src/components/OutputTable/index.tsx":"70","/home/guilherme/Documentos/Frontend restore/src/components/OutputTable/styles.tsx":"71","/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/Users/index.tsx":"72","/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/Users/styles.tsx":"73","/home/guilherme/Documentos/Frontend restore/src/components/UsersTable/index.tsx":"74","/home/guilherme/Documentos/Frontend restore/src/components/CreateUser/index.tsx":"75","/home/guilherme/Documentos/Frontend restore/src/components/EditUser/index.tsx":"76","/home/guilherme/Documentos/Frontend restore/src/components/EditUser/styles.tsx":"77","/home/guilherme/Documentos/Frontend restore/src/components/UsersTable/styles.tsx":"78","/home/guilherme/Documentos/Frontend restore/src/components/GenericAlert/index.tsx":"79","/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/Categories/index.tsx":"80","/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/Categories/styles.tsx":"81","/home/guilherme/Documentos/Frontend restore/src/components/CreateCategory/index.tsx":"82","/home/guilherme/Documentos/Frontend restore/src/components/CreateCategory/styles.tsx":"83","/home/guilherme/Documentos/Frontend restore/src/components/CategoriesTable/index.tsx":"84","/home/guilherme/Documentos/Frontend restore/src/components/EditCategory/index.tsx":"85","/home/guilherme/Documentos/Frontend restore/src/components/EditCategory/styles.tsx":"86","/home/guilherme/Documentos/Frontend restore/src/components/Reports/index.tsx":"87","/home/guilherme/Documentos/Frontend restore/src/components/Reports/styles.tsx":"88","/home/guilherme/Documentos/Frontend restore/src/pages/Report/index.tsx":"89","/home/guilherme/Documentos/Frontend restore/src/components/InputReport/index.tsx":"90","/home/guilherme/Documentos/Frontend restore/src/pages/Recover/index.tsx":"91","/home/guilherme/Documentos/Frontend restore/src/pages/Recover/styles.tsx":"92"},{"size":197,"mtime":1611803929485,"results":"93","hashOfConfig":"94"},{"size":382,"mtime":1616072721549,"results":"95","hashOfConfig":"94"},{"size":466,"mtime":1611953434231,"results":"96","hashOfConfig":"94"},{"size":5916,"mtime":1621281446534,"results":"97","hashOfConfig":"94"},{"size":1310,"mtime":1620827360042,"results":"98","hashOfConfig":"94"},{"size":315,"mtime":1612102403043,"results":"99","hashOfConfig":"94"},{"size":1596,"mtime":1615573240682,"results":"100","hashOfConfig":"94"},{"size":350,"mtime":1611796903797,"results":"101","hashOfConfig":"94"},{"size":365,"mtime":1612462135110,"results":"102","hashOfConfig":"94"},{"size":709,"mtime":1616523912158,"results":"103","hashOfConfig":"94"},{"size":244,"mtime":1620819845259,"results":"104","hashOfConfig":"94"},{"size":1995,"mtime":1616249088278,"results":"105","hashOfConfig":"94"},{"size":750,"mtime":1612406086383,"results":"106","hashOfConfig":"94"},{"size":162,"mtime":1612231855119,"results":"107","hashOfConfig":"94"},{"size":285,"mtime":1611897642839,"results":"108","hashOfConfig":"94"},{"size":1453,"mtime":1611934302292,"results":"109","hashOfConfig":"94"},{"size":1260,"mtime":1612545657736,"results":"110","hashOfConfig":"94"},{"size":603,"mtime":1620922355723,"results":"111","hashOfConfig":"94"},{"size":2115,"mtime":1617218705882,"results":"112","hashOfConfig":"94"},{"size":1017,"mtime":1617219350876,"results":"113","hashOfConfig":"94"},{"size":1876,"mtime":1620823251707,"results":"114","hashOfConfig":"94"},{"size":718,"mtime":1616243696838,"results":"115","hashOfConfig":"94"},{"size":1432,"mtime":1612795936526,"results":"116","hashOfConfig":"94"},{"size":1194,"mtime":1612545693205,"results":"117","hashOfConfig":"94"},{"size":2148,"mtime":1621347916735,"results":"118","hashOfConfig":"94"},{"size":1148,"mtime":1617675129259,"results":"119","hashOfConfig":"94"},{"size":5469,"mtime":1617633992726,"results":"120","hashOfConfig":"94"},{"size":11351,"mtime":1617659416550,"results":"121","hashOfConfig":"94"},{"size":1905,"mtime":1617283085830,"results":"122","hashOfConfig":"94"},{"size":200,"mtime":1612296236886,"results":"123","hashOfConfig":"94"},{"size":261,"mtime":1612296104473,"results":"124","hashOfConfig":"94"},{"size":365,"mtime":1616699619300,"results":"125","hashOfConfig":"94"},{"size":449,"mtime":1612364518043,"results":"126","hashOfConfig":"94"},{"size":269,"mtime":1612480474513,"results":"127","hashOfConfig":"94"},{"size":1961,"mtime":1616786859838,"results":"128","hashOfConfig":"94"},{"size":1214,"mtime":1615664049573,"results":"129","hashOfConfig":"94"},{"size":995,"mtime":1616516670064,"results":"130","hashOfConfig":"94"},{"size":2184,"mtime":1615470909288,"results":"131","hashOfConfig":"94"},{"size":1012,"mtime":1612823658482,"results":"132","hashOfConfig":"94"},{"size":2632,"mtime":1621347553869,"results":"133","hashOfConfig":"94"},{"size":1937,"mtime":1615664204017,"results":"134","hashOfConfig":"94"},{"size":4851,"mtime":1615658757359,"results":"135","hashOfConfig":"94"},{"size":4050,"mtime":1617486355388,"results":"136","hashOfConfig":"94"},{"size":1996,"mtime":1615236275513,"results":"137","hashOfConfig":"94"},{"size":401,"mtime":1612661145860,"results":"138","hashOfConfig":"94"},{"size":754,"mtime":1614777908860,"results":"139","hashOfConfig":"94"},{"size":271,"mtime":1612644956559,"results":"140","hashOfConfig":"94"},{"size":4649,"mtime":1617658625667,"results":"141","hashOfConfig":"94"},{"size":3014,"mtime":1617487666043,"results":"142","hashOfConfig":"94"},{"size":393,"mtime":1616078136028,"results":"143","hashOfConfig":"94"},{"size":196,"mtime":1612667305567,"results":"144","hashOfConfig":"94"},{"size":196,"mtime":1614773236727,"results":"145","hashOfConfig":"94"},{"size":5145,"mtime":1616090249717,"results":"146","hashOfConfig":"94"},{"size":1638,"mtime":1616028728202,"results":"147","hashOfConfig":"94"},{"size":5361,"mtime":1617652506545,"results":"148","hashOfConfig":"94"},{"size":11456,"mtime":1617628073285,"results":"149","hashOfConfig":"94"},{"size":1419,"mtime":1612826088110,"results":"150","hashOfConfig":"94"},{"size":512,"mtime":1614776856869,"results":"151","hashOfConfig":"94"},{"size":834,"mtime":1614777220497,"results":"152","hashOfConfig":"94"},{"size":2705,"mtime":1617633790965,"results":"153","hashOfConfig":"94"},{"size":227,"mtime":1615241494487,"results":"154","hashOfConfig":"94"},{"size":467,"mtime":1615901715361,"results":"155","hashOfConfig":"156"},{"size":272,"mtime":1615902536807,"results":"157","hashOfConfig":"156"},{"size":1617,"mtime":1615901654249,"results":"158","hashOfConfig":"94"},{"size":1157,"mtime":1617283110662,"results":"159","hashOfConfig":"94"},{"size":10231,"mtime":1617659378006,"results":"160","hashOfConfig":"94"},{"size":1591,"mtime":1616074520128,"results":"161","hashOfConfig":"94"},{"size":2383,"mtime":1617217908550,"results":"162","hashOfConfig":"94"},{"size":518,"mtime":1617217959535,"results":"163","hashOfConfig":"94"},{"size":6762,"mtime":1617651770248,"results":"164","hashOfConfig":"94"},{"size":196,"mtime":1616417323407,"results":"165","hashOfConfig":"94"},{"size":3801,"mtime":1616695997672,"results":"166","hashOfConfig":"94"},{"size":1002,"mtime":1616523763173,"results":"167","hashOfConfig":"94"},{"size":5809,"mtime":1621355113363,"results":"168","hashOfConfig":"94"},{"size":6277,"mtime":1616695934462,"results":"169","hashOfConfig":"94"},{"size":6321,"mtime":1617320265184,"results":"170","hashOfConfig":"94"},{"size":1234,"mtime":1616603866647,"results":"171","hashOfConfig":"94"},{"size":158,"mtime":1616678974929,"results":"172","hashOfConfig":"156"},{"size":2330,"mtime":1616770523433,"results":"173","hashOfConfig":"94"},{"size":4430,"mtime":1617483595410,"results":"174","hashOfConfig":"94"},{"size":1002,"mtime":1617220264976,"results":"175","hashOfConfig":"94"},{"size":4673,"mtime":1617487175461,"results":"176","hashOfConfig":"94"},{"size":590,"mtime":1617284640801,"results":"177","hashOfConfig":"94"},{"size":5714,"mtime":1621355478732,"results":"178","hashOfConfig":"94"},{"size":5501,"mtime":1617628034784,"results":"179","hashOfConfig":"94"},{"size":590,"mtime":1617320389271,"results":"180","hashOfConfig":"94"},{"size":2983,"mtime":1620827257089,"results":"181","hashOfConfig":"94"},{"size":1040,"mtime":1617675700992,"results":"182","hashOfConfig":"94"},{"size":461,"mtime":1617677854172,"results":"183","hashOfConfig":"94"},{"size":4203,"mtime":1620823306564,"results":"184","hashOfConfig":"94"},{"size":4457,"mtime":1621342270885,"results":"185","hashOfConfig":"94"},{"size":1274,"mtime":1621004070079,"results":"186","hashOfConfig":"94"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},"13iw7rc",{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"189"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"189"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"189"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"189"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"189"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},"1xttdz7",{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"342","messages":"343","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"189"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"351"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},"/home/guilherme/Documentos/Frontend restore/src/index.tsx",[],["380","381","382","383","384"],"/home/guilherme/Documentos/Frontend restore/src/App.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/styles/global.ts",[],"/home/guilherme/Documentos/Frontend restore/src/pages/SignIn/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/pages/SignIn/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/Button/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/Input/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/utils/getValidationErrors.ts",[],"/home/guilherme/Documentos/Frontend restore/src/components/Tooltip/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/Tooltip/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/services/api.ts",[],"/home/guilherme/Documentos/Frontend restore/src/hooks/AuthContext.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/ToastContainer/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/ToastContainer/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/hooks/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/hooks/ToastContext.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/ToastContainer/Toast/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/routes/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/routes/Route.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/SideBar/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/SideBar/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/ToastContainer/Toast/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/Products/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/Products/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/ProductTable/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/ProductView/index.tsx",["385","386"],"import React, {\n  ChangeEvent,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { useParams } from 'react-router-dom';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport { FaRegEdit } from 'react-icons/fa';\nimport * as Yup from 'yup';\nimport { CgUnavailable } from 'react-icons/cg';\nimport { BsCheckBox } from 'react-icons/bs';\n\nimport api from '../../../services/api';\nimport LabelInput from '../../../components/LabelInput';\nimport InputFloat from '../../../components/InputFloat';\nimport Textarea from '../../../components/Textarea';\n\nimport { Container, InputForm, ButtonDiv, Status, StatusDiv } from './styles';\nimport Title from '../../../components/Title';\nimport Button from '../../../components/Button';\nimport Select from '../../../components/Select';\n\nimport {\n  CategoryProps,\n  MoldProps,\n  ProductProps,\n  ProviderProps,\n  genreOptions,\n  sizeOptions,\n  typeOptions,\n} from '../../../utils/props';\nimport { useToast } from '../../../hooks/ToastContext';\nimport getValidationErrors from '../../../utils/getValidationErrors';\nimport Loading from '../../../components/Loading';\n\ninterface ParamsProps {\n  id: string;\n}\n\nconst ProductView: React.FC = () => {\n  const { id } = useParams<ParamsProps>();\n  const formRef = useRef<FormHandles>(null);\n  const { addToast } = useToast();\n\n  const [readOnly, setReadOnly] = useState(true);\n\n  const [edition, setEdition] = useState(false);\n  const [categories, setCategories] = useState<CategoryProps[] | undefined>(\n    undefined\n  );\n  const [molds, setMolds] = useState<MoldProps[] | undefined>(undefined);\n  const [providers, setProviders] = useState<ProviderProps[] | undefined>(\n    undefined\n  );\n  const [product, setProduct] = useState<ProductProps | undefined>(undefined);\n  const [sizeSelect, setSizeSelect] = useState('');\n  const [genreSelect, setGenreSelect] = useState('');\n  const [typeSelect, setTypeSelect] = useState('');\n  const [moldSelect, setMoldSelect] = useState('');\n  const [categorySelect, setCategorySelect] = useState('');\n  const [providerSelect, setProviderSelect] = useState('');\n  const [productInStock, setProductInStock] = useState(false);\n  const [obs, setObs] = useState('');\n\n  const handleEdition = (): void => {\n    if (edition) return;\n    setEdition(true);\n    setReadOnly(false);\n    addToast({\n      title: 'Modo edição',\n      description: 'Agora você pode editar as informações',\n      type: 'info',\n    });\n  };\n  const handleCatchEdition = useCallback(() => {\n    setEdition(true);\n    setReadOnly(false);\n  }, []);\n\n  const handleDefaultValue = useCallback((value: number): string => {\n    if (value % 1 !== 0) {\n      return String(value);\n    }\n    const stringValue = `${String(value)},00`;\n    return stringValue;\n  }, []);\n\n  const handleSubmit = useCallback(\n    async (data) => {\n      formRef.current?.setErrors({});\n      try {\n        const schema = Yup.object().shape({\n          name: Yup.string().required('Nome obrigatório'),\n          color: Yup.string().required('Cor obrigatória'),\n          purchase_value: Yup.string().required('Valor de compra obrigatório'),\n          sale_value: Yup.string().required('Valor de venda obrigatório'),\n        });\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n        const purchaseValueString: string = data.purchase_value\n          .replace('R$', '')\n          .replace(',', '.');\n        const purchaseValue = parseFloat(purchaseValueString);\n\n        const saleValueString: string = data.sale_value\n          .replace('R$', '')\n          .replace(',', '.');\n        const saleValue = parseFloat(saleValueString);\n\n        await api.put(`products/${product?.id}`, {\n          name: data.name,\n          color: data.color,\n          brand: data.brand,\n          obs: data.obs,\n          purchase_value: purchaseValue,\n          sale_value: saleValue,\n          genre: genreSelect,\n          size: sizeSelect,\n          purchase_type: typeSelect,\n          category: categorySelect,\n          mold: moldSelect,\n          provider: providerSelect,\n        });\n        addToast({\n          title: 'Informações alteradas com sucesso.',\n          type: 'success',\n        });\n        setEdition(false);\n        setReadOnly(true);\n      } catch (err) {\n        handleCatchEdition();\n\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n          formRef.current?.setErrors(errors);\n          return;\n        }\n\n        addToast({\n          title: 'Erro',\n          type: 'error',\n          description: 'Verifique as informações',\n        });\n        throw new Error(err);\n      }\n    },\n    [\n      moldSelect,\n      product,\n      categorySelect,\n      providerSelect,\n      genreSelect,\n      sizeSelect,\n      typeSelect,\n      addToast,\n      handleCatchEdition,\n    ]\n  );\n\n  useEffect(() => {\n    api.get(`products/${id}`).then((response) => {\n      setProduct(response.data);\n      if (response.data.status === 'I') setProductInStock(true);\n      else setProductInStock(false);\n    });\n  }, [id]);\n  useEffect(() => {\n    api.get(`categories`).then((response) => {\n      setCategories(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    api.get(`models`).then((response) => {\n      setMolds(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    api.get(`providers`).then((response) => {\n      setProviders(response.data);\n    });\n  }, []);\n\n  const handleType = useCallback((e: ChangeEvent<HTMLSelectElement>) => {\n    const { selectedIndex } = e.target.options;\n    const eventType = e.target.options[selectedIndex].getAttribute('id');\n    if (eventType) {\n      setTypeSelect(eventType);\n    }\n  }, []);\n  const handleMold = useCallback((e: ChangeEvent<HTMLSelectElement>) => {\n    const { selectedIndex } = e.target.options;\n    const eventMold = e.target.options[selectedIndex].getAttribute('id');\n    if (eventMold) {\n      setMoldSelect(eventMold);\n    }\n  }, []);\n  const handleCategory = useCallback((e: ChangeEvent<HTMLSelectElement>) => {\n    const { selectedIndex } = e.target.options;\n    const eventCategory = e.target.options[selectedIndex].getAttribute('id');\n    if (eventCategory) {\n      setCategorySelect(eventCategory);\n    }\n  }, []);\n  const handleProvider = useCallback((e: ChangeEvent<HTMLSelectElement>) => {\n    const { selectedIndex } = e.target.options;\n    const eventProvider = e.target.options[selectedIndex].getAttribute('id');\n    if (eventProvider) {\n      setProviderSelect(eventProvider);\n    }\n  }, []);\n  const handleGenre = useCallback((e: ChangeEvent<HTMLSelectElement>) => {\n    const { selectedIndex } = e.target.options;\n    const eventGenre = e.target.options[selectedIndex].getAttribute('id');\n    if (eventGenre) {\n      setGenreSelect(eventGenre);\n    }\n  }, []);\n  const handleSize = useCallback((e: ChangeEvent<HTMLSelectElement>) => {\n    const { selectedIndex } = e.target.options;\n    const eventSize = e.target.options[selectedIndex].getAttribute('id');\n    if (eventSize) {\n      setSizeSelect(eventSize);\n    }\n  }, []);\n\n  if (product && categories && molds && providers) {\n    return (\n      <Container>\n        <Title>\n          <h1>{product.name}</h1>\n        </Title>\n        <ButtonDiv>\n          <Button type=\"button\" onClick={handleEdition}>\n            <FaRegEdit />\n            Editar\n          </Button>\n        </ButtonDiv>\n\n        <Form ref={formRef} onSubmit={handleSubmit}>\n          <h1>Informações</h1>\n\n          <StatusDiv>\n            <h2>Status:</h2>\n            <Status inStock={productInStock}>\n              {productInStock ? (\n                <BsCheckBox size={30} />\n              ) : (\n                <CgUnavailable size={30} />\n              )}\n              {productInStock ? <h3>Em estoque</h3> : <h3>Indisponível</h3>}\n            </Status>\n          </StatusDiv>\n          <InputForm>\n            <div>\n              <LabelInput\n                name=\"name\"\n                label=\"Nome\"\n                defaultValue={product.name}\n                readOnly={readOnly}\n              />\n\n              <LabelInput\n                name=\"color\"\n                label=\"Cor\"\n                defaultValue={product.color}\n                readOnly={readOnly}\n              />\n\n              <LabelInput\n                name=\"brand\"\n                label=\"Marca\"\n                defaultValue={product.brand}\n                readOnly={readOnly}\n              />\n              <Select\n                name=\"genre\"\n                id=\"genre\"\n                options={genreOptions}\n                onChange={handleGenre}\n                label=\"Gênero\"\n                defaultValue={product.genre}\n                readOnly={readOnly}\n              />\n              <Select\n                name=\"size\"\n                id=\"size\"\n                options={sizeOptions}\n                onChange={handleSize}\n                label=\"Tamanho\"\n                defaultValue={product.size}\n                readOnly={readOnly}\n              />\n            </div>\n            <div>\n              <Select\n                name=\"type\"\n                id=\"type\"\n                options={typeOptions}\n                onChange={handleType}\n                label=\"Tipo de compra\"\n                defaultValue={\n                  product.purchase_type === 'O' ? 'Próprio' : 'Consignado'\n                }\n                readOnly={readOnly}\n              />\n              <Select\n                name=\"mold\"\n                id=\"mold\"\n                options={molds}\n                onChange={handleMold}\n                label=\"Modelo\"\n                defaultValue={product.mold.name}\n                readOnly={readOnly}\n              />\n\n              <Select\n                name=\"provider\"\n                id=\"provider\"\n                options={providers}\n                onChange={handleProvider}\n                label=\"Fornecedor\"\n                defaultValue={product.provider.name}\n                readOnly={readOnly}\n              />\n\n              <Select\n                name=\"category\"\n                id=\"category\"\n                options={categories}\n                onChange={handleCategory}\n                label=\"Categoria\"\n                defaultValue={product.category.name}\n                readOnly={readOnly}\n              />\n            </div>\n          </InputForm>\n          <h1>Valores</h1>\n          <InputForm>\n            <div>\n              <InputFloat\n                name=\"purchase_value\"\n                id=\"purchase_value\"\n                label=\"Valor de compra\"\n                defaultValue={handleDefaultValue(product.purchase_value)}\n                readOnly={readOnly}\n              />\n              <InputFloat\n                label=\"Valor de venda\"\n                name=\"sale_value\"\n                id=\"sale_value\"\n                defaultValue={handleDefaultValue(product.sale_value)}\n                readOnly={readOnly}\n              />\n            </div>\n          </InputForm>\n          <h1>Observações</h1>\n\n          <Textarea\n            name=\"obs\"\n            id=\"obsContainer\"\n            readOnly={readOnly}\n            defaultValue={product.obs}\n          />\n\n          {edition && <Button type=\"submit\">Salvar</Button>}\n        </Form>\n      </Container>\n    );\n  }\n\n  return <Loading />;\n};\n\nexport default ProductView;\n","/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/ProductView/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/Title/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/Title/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/Button/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/LabelInput/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/LabelInput/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/Select/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/Select/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/Input/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/InputFloat/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/InputFloat/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/Registers/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/Registers/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/RegisterTable/index.tsx",["387","388","389"],"import React, { useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport {\n  withStyles,\n  Theme,\n  createStyles,\n  makeStyles,\n} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { GrView } from 'react-icons/gr';\nimport { RegisterProps } from '../../utils/props';\nimport getHoursBr from '../../utils/getDateBr';\nimport api from '../../services/api';\n\nimport Loading from '../Loading';\n\nimport { Message } from './styles';\n\nimport ButtonTooltip from '../ButtonTooltip';\n\nconst alignTitle = 'left';\n\nconst StyledTableCell = withStyles((theme: Theme) =>\n  createStyles({\n    head: {\n      backgroundColor: theme.palette.common.white,\n      color: theme.palette.common.black,\n    },\n    body: {\n      fontSize: 14,\n    },\n  })\n)(TableCell);\n\nconst useStyles = makeStyles({\n  button: {\n    MaxHeight: '100%',\n    MaxWidth: '100%',\n    backgroundColor: '#fff',\n    // color: '#fff',\n    borderRadius: '5px',\n    padding: '2px',\n    marginRight: '3px',\n  },\n  styledRow: {\n    width: '100%',\n    border: 'transparent',\n    background: 'transparent',\n  },\n  load: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    '& .MuiCircularProgress-root': {\n      borderColor: '#000',\n    },\n  },\n});\n\nconst StyledTableRow = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.action.hover,\n        '&:hover': {\n          backgroundColor: '#b9b9b9',\n        },\n      },\n      '&:nth-of-type(even)': {\n        '&:hover': {\n          backgroundColor: '#b9b9b9',\n        },\n      },\n      marginTop: '5px',\n    },\n  })\n)(TableRow);\n\ninterface RegisterTableProps {\n  registers: RegisterProps[] | undefined;\n  finishedData: boolean;\n}\n\nconst CustomizedTables: React.FC<RegisterTableProps> = ({\n  registers,\n  finishedData,\n}) => {\n  const classes = useStyles();\n\n  if (finishedData && registers) {\n    return (\n      <>\n        {registers.length === 0 ? (\n          <Message>Parece que não há registros :(</Message>\n        ) : (\n          <TableContainer component={Paper}>\n            <Table aria-label=\"customized table\">\n              <TableHead>\n                <TableRow>\n                  <StyledTableCell align={alignTitle}>\n                    Tipo de registro\n                  </StyledTableCell>\n                  <StyledTableCell align={alignTitle}>\n                    Data de criação\n                  </StyledTableCell>\n                  <StyledTableCell align={alignTitle}>\n                    Número de produtos\n                  </StyledTableCell>\n                  <StyledTableCell align={alignTitle}>Usuário</StyledTableCell>\n                  <StyledTableCell align={alignTitle}> </StyledTableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {registers.map((register) => (\n                  <StyledTableRow key={register.id}>\n                    <StyledTableCell align=\"left\">\n                      {register.type === 'I' ? 'Entrada' : 'Saída'}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"left\">\n                      {getHoursBr(register.created_at)}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"left\">\n                      {register.products.length}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"left\">\n                      {register.user.name}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"left\">\n                      <NavLink to={`/dashboard/registerView/${register.id}`}>\n                        <ButtonTooltip\n                          title=\"Visualizar\"\n                          positionX=\"-50px\"\n                          positionY=\"-50px\"\n                        >\n                          <button\n                            id=\"view-button\"\n                            type=\"button\"\n                            className={classes.button}\n                          >\n                            <GrView size={20} />\n                          </button>\n                        </ButtonTooltip>\n                      </NavLink>\n                    </StyledTableCell>\n                  </StyledTableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        )}\n      </>\n    );\n  }\n  return <Loading />;\n};\nexport default CustomizedTables;\n","/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/RegisterView/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/RegisterView/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/Loading/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/Loading/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/utils/getDateBr.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/RegisterProductsTable/index.tsx",["390"],"import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport {\n  withStyles,\n  Theme,\n  createStyles,\n  makeStyles,\n} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { GrView } from 'react-icons/gr';\nimport { ProductProps } from '../../utils/props';\nimport sortByName from '../../utils/sortObjectArray';\n\nimport Loading from '../Loading';\n\nimport ButtonTooltip from '../ButtonTooltip';\n\nconst alignTitle = 'left';\n\nconst StyledTableCell = withStyles((theme: Theme) =>\n  createStyles({\n    head: {\n      backgroundColor: theme.palette.common.white,\n      color: theme.palette.common.black,\n    },\n    body: {\n      fontSize: 14,\n    },\n  })\n)(TableCell);\n\nconst useStyles = makeStyles({\n  button: {\n    MaxHeight: '100%',\n    MaxWidth: '100%',\n    backgroundColor: '#fff',\n    // color: '#fff',\n    borderRadius: '5px',\n    padding: '2px',\n    marginRight: '3px',\n  },\n  styledRow: {\n    width: '100%',\n    border: 'transparent',\n    background: 'transparent',\n  },\n});\n\nconst StyledTableRow = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.action.hover,\n        '&:hover': {\n          backgroundColor: '#b9b9b9',\n        },\n      },\n      '&:nth-of-type(even)': {\n        '&:hover': {\n          backgroundColor: '#b9b9b9',\n        },\n      },\n      marginTop: '5px',\n    },\n  })\n)(TableRow);\n\ninterface TableProps {\n  products: ProductProps[];\n}\n\nconst CustomizedTables: React.FC<TableProps> = ({ products }) => {\n  const classes = useStyles();\n\n  sortByName(products);\n\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table aria-label=\"customized table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell align={alignTitle}>Código</StyledTableCell>\n              <StyledTableCell align={alignTitle}>Nome</StyledTableCell>\n              <StyledTableCell align={alignTitle}>Modelo</StyledTableCell>\n              <StyledTableCell align={alignTitle}>Categoria</StyledTableCell>\n              <StyledTableCell align={alignTitle}>Gênero</StyledTableCell>\n              <StyledTableCell align={alignTitle}>Venda</StyledTableCell>\n              <StyledTableCell align={alignTitle}>Status</StyledTableCell>\n              <StyledTableCell align={alignTitle}> </StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {products.map((product) => (\n              <StyledTableRow key={product.id}>\n                <StyledTableCell align=\"left\">\n                  {product.product_number}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">{product.name}</StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {product.mold.name}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {product.category.name}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {product.genre === 'F' ? 'Feminino' : 'Masculino'}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {product.sale_value.toLocaleString('pt-br', {\n                    style: 'currency',\n                    currency: 'BRL',\n                  })}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {product.status === 'I' ? 'Em estoque' : 'Indisponível'}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  <NavLink to={`/dashboard/productView/${product.id}`}>\n                    <ButtonTooltip\n                      title=\"Visualizar\"\n                      positionX=\"-50px\"\n                      positionY=\"-50px\"\n                    >\n                      <button\n                        id=\"view-button\"\n                        type=\"button\"\n                        className={classes.button}\n                      >\n                        <GrView size={20} />\n                      </button>\n                    </ButtonTooltip>\n                  </NavLink>\n                </StyledTableCell>\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n};\nexport default CustomizedTables;\n","/home/guilherme/Documentos/Frontend restore/src/components/Alert/index.tsx",["391"],"import React, { useCallback, useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport { createStyles, makeStyles } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Dialog, { DialogProps } from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { IconBaseProps } from 'react-icons/lib';\n\nimport { ButtonExclude } from './styles';\n\ninterface AlertProps extends DialogProps {\n  title: string;\n  description?: string;\n  widthButton?: number;\n  heightButton?: number;\n  colorButton?: string;\n  colorIcon?: string;\n  button: boolean;\n  icon?: React.ComponentType<IconBaseProps>;\n  iconButton?: React.ComponentType<IconBaseProps>;\n  openAlert?: boolean;\n  handleConfirm: () => void;\n}\n\nconst Alert: React.FC<AlertProps> = ({\n  title,\n  description,\n  icon: Icon,\n  iconButton: IconB,\n  colorIcon,\n  handleConfirm,\n  button,\n  children,\n  openAlert,\n  ...rest\n}) => {\n  // '#c74444'\n  const useStyles = makeStyles(() =>\n    createStyles({\n      colorPrimary: {\n        color: '#c74444',\n      },\n      colorSecondary: {\n        color: '#9c9b9b',\n      },\n      icon: {\n        color: colorIcon,\n        alignSelf: 'center',\n        marginTop: '20px',\n      },\n    })\n  );\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = useCallback(() => {\n    setOpen(true);\n  }, []);\n  useEffect(() => {\n    if (openAlert) setOpen(true);\n  }, [openAlert]);\n  const handleConfirmButton = useCallback(() => {\n    setOpen(false);\n    handleConfirm();\n  }, [handleConfirm]);\n\n  const handleCancel = useCallback(() => {\n    setOpen(false);\n  }, []);\n\n  return (\n    <div>\n      {button && (\n        <ButtonExclude type=\"button\" onClick={handleClickOpen}>\n          {IconB && <IconB />}\n          {children}\n        </ButtonExclude>\n      )}\n\n      <Dialog\n        {...rest}\n        open={open}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        {Icon && <Icon className={classes.icon} size={45} />}\n        <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {description}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={handleConfirmButton}\n            className={classes.colorPrimary}\n            color=\"primary\"\n          >\n            Confirmar\n          </Button>\n          <Button\n            onClick={handleCancel}\n            className={classes.colorSecondary}\n            color=\"secondary\"\n            autoFocus\n          >\n            Cancelar\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default Alert;\n","/home/guilherme/Documentos/Frontend restore/src/components/Alert/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/RegisterTable/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/ProductTable/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/Add Register/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/Add Register/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/AddProductTable/index.tsx",["392","393","394","395"],"import React, { useCallback, useState } from 'react';\nimport {\n  withStyles,\n  Theme,\n  createStyles,\n  makeStyles,\n} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { FaRegEdit } from 'react-icons/fa';\nimport { SiIfixit } from 'react-icons/si';\n\nimport EditProduct from '../EditProduct';\n\nimport { ProductProps } from '../../utils/props';\nimport Loading from '../Loading';\n\nconst alignTitle = 'left';\n\nconst StyledTableCell = withStyles((theme: Theme) =>\n  createStyles({\n    head: {\n      backgroundColor: theme.palette.common.white,\n      color: theme.palette.common.black,\n    },\n    body: {\n      fontSize: 14,\n    },\n  })\n)(TableCell);\n\nconst useStyles = makeStyles({\n  button: {\n    MaxHeight: '100%',\n    MaxWidth: '100%',\n    backgroundColor: '#82af99',\n    color: '#fff',\n    borderRadius: '5px',\n    padding: '2px 2px 0px 2px',\n    marginRight: '8px',\n  },\n  excludeButton: {\n    MaxHeight: '100%',\n    MaxWidth: '100%',\n    padding: '2px 2px 0px 2px',\n    backgroundColor: '#c74444',\n    color: '#fff',\n    borderRadius: '5px',\n  },\n  styledRow: {\n    width: '100%',\n    border: 'transparent',\n    background: 'transparent',\n  },\n  buttonCell: {\n    flexDirection: 'row',\n  },\n  table: {\n    height: '100%',\n  },\n});\n\nconst StyledTableRow = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.action.hover,\n        '&:hover': {\n          backgroundColor: '#b9b9b9',\n        },\n      },\n      '&:nth-of-type(even)': {\n        '&:hover': {\n          backgroundColor: '#b9b9b9',\n        },\n      },\n      marginTop: '5px',\n    },\n  })\n)(TableRow);\n\ninterface TableProps {\n  products: ProductProps[];\n  handleProduct: (data: ProductProps) => void;\n}\n\nconst CustomizedTables: React.FC<TableProps> = ({\n  products,\n  handleProduct,\n}) => {\n  const classes = useStyles();\n  const [editProduct, setEditProduct] = useState(false);\n  const [productToEdit, setProductToEdit] = useState<ProductProps>(\n    {} as ProductProps\n  );\n  const [productsTable, setProductsTable] = useState<ProductProps[]>(products);\n\n  const handleEdit = useCallback((product: ProductProps) => {\n    setEditProduct(true);\n    setProductToEdit(product);\n  }, []);\n  const handleEditedProduct = useCallback(\n    (data: ProductProps) => {\n      setEditProduct(false);\n      handleProduct(data);\n    },\n    [handleProduct]\n  );\n\n  if (productsTable) {\n    return (\n      <>\n        <TableContainer component={Paper}>\n          <Table aria-label=\"customized table\">\n            <TableHead>\n              <TableRow>\n                <StyledTableCell align={alignTitle}>Nome</StyledTableCell>\n                <StyledTableCell align={alignTitle}>Modelo</StyledTableCell>\n                <StyledTableCell align={alignTitle}>Categoria</StyledTableCell>\n                <StyledTableCell align={alignTitle}>Gênero</StyledTableCell>\n                <StyledTableCell align={alignTitle}>Venda</StyledTableCell>\n                <StyledTableCell align={alignTitle}> </StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {products.map((product) => (\n                <StyledTableRow key={product.id}>\n                  <StyledTableCell align=\"left\">{product.name}</StyledTableCell>\n                  <StyledTableCell align=\"left\">\n                    {product.mold.name}\n                  </StyledTableCell>\n                  <StyledTableCell align=\"left\">\n                    {product.category.name}\n                  </StyledTableCell>\n                  <StyledTableCell align=\"left\">\n                    {product.genre === 'F' ? 'Feminino' : 'Masculino'}\n                  </StyledTableCell>\n                  <StyledTableCell align=\"left\">\n                    {product.sale_value.toLocaleString('pt-br', {\n                      style: 'currency',\n                      currency: 'BRL',\n                    })}\n                  </StyledTableCell>\n                  <StyledTableCell align=\"left\" className={classes.buttonCell}>\n                    {/* <button\n                      id=\"edit-button\"\n                      type=\"button\"\n                      onClick={() => handleEdit(product)}\n                      className={classes.button}\n                    >\n                      <FaRegEdit size={20} />\n                    </button> */}\n                    {/* <button\n                      id=\"exclude-button\"\n                      type=\"button\"\n                      className={classes.excludeButton}\n                    >\n                      <SiIfixit size={20} />\n                    </button> */}\n                  </StyledTableCell>\n                </StyledTableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        {editProduct && (\n          <EditProduct\n            handleEditedProduct={handleEditedProduct}\n            editProduct={productToEdit}\n          />\n        )}\n      </>\n    );\n  }\n  return <Loading />;\n};\nexport default CustomizedTables;\n","/home/guilherme/Documentos/Frontend restore/src/components/EditProduct/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/EditProduct/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/ButtonTooltip/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/ButtonTooltip/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/utils/props.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/utils/sortObjectArray.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/LabelText/index.tsx",[],["396","397","398","399","400"],"/home/guilherme/Documentos/Frontend restore/src/components/LabelText/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/Textarea/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/Textarea/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/AddInputProduct/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/AddInputProduct/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/AddOutputProduct/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/AddOutputProduct/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/OutputTable/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/OutputTable/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/Users/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/Users/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/UsersTable/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/CreateUser/index.tsx",["401"],"import React, { useCallback, useEffect, useState, useRef } from 'react';\n\nimport { createStyles, makeStyles, withStyles } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Dialog, { DialogProps } from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Switch from '@material-ui/core/Switch';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\n\nimport LabelInput from '../LabelInput';\nimport { UserProps } from '../../utils/props';\nimport { useToast } from '../../hooks/ToastContext';\nimport getValidationErrors from '../../utils/getValidationErrors';\nimport api from '../../services/api';\n\nexport type UserCreated = Partial<UserProps>;\n\ninterface SubmitProps extends UserProps {\n  repeatPassowrd: string;\n}\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    colorPrimary: {\n      color: '#82af99',\n    },\n    colorSecondary: {\n      color: '#9c9b9b',\n    },\n    form: {\n      height: '300px',\n      display: 'flex',\n      flexDirection: 'row',\n      placeContent: 'center',\n    },\n    rightDiv: {\n      width: '300px',\n      margin: '0 40px',\n    },\n    leftDiv: {\n      width: '300px',\n      margin: '0 40px',\n    },\n    admDiv: {\n      display: 'flex',\n      marginTop: '37px',\n      marginBottom: '18px',\n      alignItems: 'center',\n    },\n    dialog: {\n      margin: '0px 20px',\n    },\n  })\n);\nconst GreenSwitch = withStyles({\n  root: {},\n  switchBase: {\n    '&$checked': {\n      color: '#82af99',\n    },\n    '&$checked + $track': {\n      backgroundColor: '#82af99',\n    },\n  },\n  checked: {},\n  track: {},\n})(Switch);\n\ninterface AlertProps extends DialogProps {\n  openAlert?: boolean;\n  handleConfirm: (user: UserCreated) => void;\n  handleCancel: () => void;\n}\nconst Alert: React.FC<AlertProps> = ({\n  handleConfirm,\n  handleCancel,\n  openAlert,\n  ...rest\n}) => {\n  const formRef = useRef<FormHandles>(null);\n  const classes = useStyles();\n  const { addToast } = useToast();\n\n  const [open, setOpen] = useState(false);\n  const [checked, setChecked] = useState(false);\n\n  useEffect(() => {\n    if (openAlert) setOpen(true);\n  }, [openAlert]);\n\n  const handleSubmit = useCallback(\n    async (data: SubmitProps) => {\n      formRef.current?.setErrors({});\n      try {\n        let schema = Yup.object().shape({\n          name: Yup.string().required('Nome obrigatório'),\n          login: Yup.string().required('Login obrigatório'),\n          password: Yup.string()\n            .required('Senha obrigatória')\n            .min(6, 'No mínimo 6 dígitos'),\n          repeatPassword: Yup.string().oneOf(\n            [Yup.ref('password'), null],\n            'As senhas não conferem'\n          ),\n        });\n        const schemaAdministrator = Yup.object().shape({\n          email: Yup.string()\n            .required('E-mail obrigatório')\n            .email('E-mail inválido.'),\n        });\n        let newSchema;\n        if (checked) {\n          newSchema = schema.concat(schemaAdministrator);\n        } else {\n          newSchema = schema;\n        }\n        await newSchema.validate(data, {\n          abortEarly: false,\n        });\n        addToast({\n          type: 'success',\n          title: 'Usuário cadastrado com sucesso.',\n        });\n\n        setOpen(false);\n        const userCreated: UserCreated = {\n          name: data.name,\n          password: data.password,\n          administrator: checked,\n          login: data.login,\n          email: data.email,\n        };\n        handleConfirm(userCreated);\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n          formRef.current?.setErrors(errors);\n          return;\n        }\n\n        addToast({\n          title: 'Ops!',\n          type: 'error',\n          description: 'Algo deu errado. Verifique as informações',\n        });\n      }\n    },\n    [addToast, handleConfirm, checked]\n  );\n\n  const handleSwitchChange = useCallback(() => {\n    setChecked(!checked);\n  }, [checked]);\n\n  const handleCancelButton = useCallback(() => {\n    setOpen(false);\n    handleCancel();\n  }, [handleCancel]);\n\n  return (\n    <Dialog\n      {...rest}\n      open={open}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n      fullWidth\n      maxWidth=\"md\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">Cadastrar novo usuário</DialogTitle>\n\n      <DialogContent className={classes.dialog}>\n        <DialogContentText id=\"alert-dialog-description\">\n          <Form\n            ref={formRef}\n            onSubmit={handleSubmit}\n            id=\"user-form\"\n            className={classes.form}\n          >\n            <div className={classes.leftDiv}>\n              <LabelInput label=\"Nome\" name=\"name\" />\n              <LabelInput label=\"Usuário\" name=\"login\" />\n              <div className={classes.admDiv}>\n                <GreenSwitch\n                  checked={checked}\n                  onChange={handleSwitchChange}\n                  form=\"user-form\"\n                />\n                <h3>Administrador</h3>\n              </div>\n            </div>\n            <div className={classes.rightDiv}>\n              <LabelInput label=\"Senha\" name=\"password\" type=\"password\" />\n              <LabelInput\n                label=\"Repetir senha\"\n                name=\"repeatPassword\"\n                type=\"password\"\n              />\n              {checked && <LabelInput label=\"E-mail\" name=\"email\" />}\n            </div>\n          </Form>\n        </DialogContentText>\n        <DialogActions>\n          <Button\n            onClick={handleCancelButton}\n            className={classes.colorSecondary}\n            color=\"secondary\"\n            autoFocus\n          >\n            Cancelar\n          </Button>\n          <Button\n            type=\"submit\"\n            form=\"user-form\"\n            className={classes.colorPrimary}\n            color=\"primary\"\n          >\n            Confirmar\n          </Button>\n        </DialogActions>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default Alert;\n","/home/guilherme/Documentos/Frontend restore/src/components/EditUser/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/EditUser/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/UsersTable/styles.tsx",[],["402","403","404","405","406"],"/home/guilherme/Documentos/Frontend restore/src/components/GenericAlert/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/Categories/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/pages/Dashboard/Categories/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/CreateCategory/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/CreateCategory/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/CategoriesTable/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/EditCategory/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/EditCategory/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/Reports/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/Reports/styles.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/pages/Report/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/components/InputReport/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/pages/Recover/index.tsx",[],"/home/guilherme/Documentos/Frontend restore/src/pages/Recover/styles.tsx",[],{"ruleId":"407","replacedBy":"408"},{"ruleId":"409","replacedBy":"410"},{"ruleId":"411","replacedBy":"412"},{"ruleId":"413","replacedBy":"414"},{"ruleId":"415","replacedBy":"416"},{"ruleId":"417","severity":1,"message":"418","line":66,"column":10,"nodeType":"419","messageId":"420","endLine":66,"endColumn":13},{"ruleId":"417","severity":1,"message":"421","line":66,"column":15,"nodeType":"419","messageId":"420","endLine":66,"endColumn":21},{"ruleId":"417","severity":1,"message":"422","line":1,"column":17,"nodeType":"419","messageId":"420","endLine":1,"endColumn":26},{"ruleId":"417","severity":1,"message":"423","line":1,"column":28,"nodeType":"419","messageId":"420","endLine":1,"endColumn":36},{"ruleId":"417","severity":1,"message":"424","line":19,"column":8,"nodeType":"419","messageId":"420","endLine":19,"endColumn":11},{"ruleId":"417","severity":1,"message":"425","line":20,"column":8,"nodeType":"419","messageId":"420","endLine":20,"endColumn":15},{"ruleId":"417","severity":1,"message":"426","line":2,"column":10,"nodeType":"419","messageId":"420","endLine":2,"endColumn":18},{"ruleId":"417","severity":1,"message":"427","line":15,"column":10,"nodeType":"419","messageId":"420","endLine":15,"endColumn":19},{"ruleId":"417","severity":1,"message":"428","line":16,"column":10,"nodeType":"419","messageId":"420","endLine":16,"endColumn":18},{"ruleId":"417","severity":1,"message":"429","line":101,"column":25,"nodeType":"419","messageId":"420","endLine":101,"endColumn":41},{"ruleId":"417","severity":1,"message":"430","line":103,"column":9,"nodeType":"419","messageId":"420","endLine":103,"endColumn":19},{"ruleId":"407","replacedBy":"431"},{"ruleId":"409","replacedBy":"432"},{"ruleId":"411","replacedBy":"433"},{"ruleId":"413","replacedBy":"434"},{"ruleId":"415","replacedBy":"435"},{"ruleId":"417","severity":1,"message":"424","line":19,"column":8,"nodeType":"419","messageId":"420","endLine":19,"endColumn":11},{"ruleId":"407","replacedBy":"436"},{"ruleId":"409","replacedBy":"437"},{"ruleId":"411","replacedBy":"438"},{"ruleId":"413","replacedBy":"439"},{"ruleId":"415","replacedBy":"440"},"lines-around-directive",["441"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'obs' is assigned a value but never used.","Identifier","unusedVar","'setObs' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'api' is defined but never used.","'Loading' is defined but never used.","'Redirect' is defined but never used.","'FaRegEdit' is defined but never used.","'SiIfixit' is defined but never used.","'setProductsTable' is assigned a value but never used.","'handleEdit' is assigned a value but never used.",["441"],[],[],[],[],["441"],[],[],[],[],"padding-line-between-statements"]